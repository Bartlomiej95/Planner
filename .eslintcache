[{"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\index.js":"1","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\App.js":"2","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\GlobalStyle.js":"3","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\mainTheme.js":"4","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\HomePage.js":"5","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Heading\\Heading.js":"6","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Button\\Button.js":"7","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Paragraph\\Paragraph.js":"8","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Input\\Input.js":"9","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\index.js":"10","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogInPage.js":"11","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\RegisterPage.js":"12","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\UserPage.js":"13","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogoutPage.js":"14","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\users.js":"15","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\projects.js":"16","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\auth.js":"17","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\MainSection.tsx":"18","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Header.js":"19","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Footer.js":"20","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\FAQSection.js":"21","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfileSection.js":"22","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\JoinUsSection.js":"23","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Banner.js":"24","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\PlannerFunc.js":"25","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LogoutSection.js":"26","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\auth.js":"27","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LoginSection.tsx":"28","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\RegisterSection.tsx":"29","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\projects.js":"30","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProjectCard\\ProjectCard.js":"31","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\FuncPlannerCard\\FuncPlannerCard.js":"32","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\QAPlannerCard\\QAPlannerCard.js":"33","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Card\\Card.js":"34","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ArchivesCard\\ArchivesCard.tsx":"35","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\users.js":"36","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Form\\RegisterForm.tsx":"37","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Label\\Label.tsx":"38","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\api\\index.js":"39","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\TaskCard\\TaskCard.tsx":"40","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\context\\UserContext.js":"41","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\errors.js":"42","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ErrorMessage\\ErrorMessage.js":"43","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\util\\domain.js":"44","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\CreateProject.js":"45","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\CreateProjectForm.js":"46","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\PersonToProject\\PersonToProject.js":"47","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\InnerUserNavbar\\InnerUserNavbar.tsx":"48","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\TextArea\\TextArea.js":"49","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\TasksToProject.js":"50","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\AsideSection.js":"51","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LabelSection.js":"52","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\DetailsProject.js":"53","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfitabilityProjectSection.js":"54","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProfabilityRow\\ProfabilityRow.js":"55","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\departments.js":"56","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\departments.js":"57","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\tasks.js":"58","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\tasks.js":"59","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\TasksSection.js":"60","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\HiddenMenu.js":"61","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\context\\theme.js":"62","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\rates.js":"63","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\RatesSection.js":"64","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\SliderTheme\\SliderTheme.js":"65","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\rates.js":"66","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\RateRow\\RateRow.js":"67","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\LoadingWrapper\\LoadingWrapper.js":"68"},{"size":1677,"mtime":1615749114360,"results":"69","hashOfConfig":"70"},{"size":2023,"mtime":1619109196609,"results":"71","hashOfConfig":"70"},{"size":309,"mtime":1610476758906,"results":"72","hashOfConfig":"70"},{"size":1332,"mtime":1618766506147,"results":"73","hashOfConfig":"70"},{"size":709,"mtime":1613322610303,"results":"74","hashOfConfig":"70"},{"size":743,"mtime":1620319175753,"results":"75","hashOfConfig":"70"},{"size":1259,"mtime":1618767064363,"results":"76","hashOfConfig":"70"},{"size":504,"mtime":1613322610261,"results":"77","hashOfConfig":"70"},{"size":514,"mtime":1614536185350,"results":"78","hashOfConfig":"70"},{"size":407,"mtime":1618856772250,"results":"79","hashOfConfig":"70"},{"size":364,"mtime":1613322610303,"results":"80","hashOfConfig":"70"},{"size":380,"mtime":1613322610307,"results":"81","hashOfConfig":"70"},{"size":445,"mtime":1613416094281,"results":"82","hashOfConfig":"70"},{"size":335,"mtime":1613322610307,"results":"83","hashOfConfig":"70"},{"size":323,"mtime":1615749114372,"results":"84","hashOfConfig":"70"},{"size":1276,"mtime":1619857089975,"results":"85","hashOfConfig":"70"},{"size":300,"mtime":1613322610298,"results":"86","hashOfConfig":"70"},{"size":8685,"mtime":1620504749414,"results":"87","hashOfConfig":"70"},{"size":3046,"mtime":1618856772242,"results":"88","hashOfConfig":"70"},{"size":453,"mtime":1618856772240,"results":"89","hashOfConfig":"70"},{"size":776,"mtime":1613322610282,"results":"90","hashOfConfig":"70"},{"size":2796,"mtime":1619878197961,"results":"91","hashOfConfig":"70"},{"size":770,"mtime":1615065938273,"results":"92","hashOfConfig":"70"},{"size":1553,"mtime":1613322610282,"results":"93","hashOfConfig":"70"},{"size":685,"mtime":1613322610294,"results":"94","hashOfConfig":"70"},{"size":2136,"mtime":1620322278212,"results":"95","hashOfConfig":"70"},{"size":756,"mtime":1613331756679,"results":"96","hashOfConfig":"70"},{"size":4328,"mtime":1620431492782,"results":"97","hashOfConfig":"70"},{"size":551,"mtime":1613322610294,"results":"98","hashOfConfig":"70"},{"size":2325,"mtime":1620496771150,"results":"99","hashOfConfig":"70"},{"size":4558,"mtime":1620546753686,"results":"100","hashOfConfig":"70"},{"size":710,"mtime":1613322610270,"results":"101","hashOfConfig":"70"},{"size":1442,"mtime":1613322610278,"results":"102","hashOfConfig":"70"},{"size":1087,"mtime":1613322610267,"results":"103","hashOfConfig":"70"},{"size":4203,"mtime":1620161091947,"results":"104","hashOfConfig":"70"},{"size":812,"mtime":1615749114357,"results":"105","hashOfConfig":"70"},{"size":2918,"mtime":1613331756684,"results":"106","hashOfConfig":"70"},{"size":2485,"mtime":1619857104117,"results":"107","hashOfConfig":"70"},{"size":1635,"mtime":1620468669591,"results":"108","hashOfConfig":"70"},{"size":4762,"mtime":1618856772238,"results":"109","hashOfConfig":"70"},{"size":753,"mtime":1617641430193,"results":"110","hashOfConfig":"70"},{"size":491,"mtime":1619564077257,"results":"111","hashOfConfig":"70"},{"size":526,"mtime":1613331756681,"results":"112","hashOfConfig":"70"},{"size":159,"mtime":1613671014288,"results":"113","hashOfConfig":"70"},{"size":11624,"mtime":1620165167423,"results":"114","hashOfConfig":"70"},{"size":1804,"mtime":1615749114365,"results":"115","hashOfConfig":"70"},{"size":2979,"mtime":1619858304963,"results":"116","hashOfConfig":"70"},{"size":4754,"mtime":1618856772230,"results":"117","hashOfConfig":"70"},{"size":365,"mtime":1614536185351,"results":"118","hashOfConfig":"70"},{"size":8255,"mtime":1620492646498,"results":"119","hashOfConfig":"70"},{"size":502,"mtime":1616501917871,"results":"120","hashOfConfig":"70"},{"size":3241,"mtime":1617641430196,"results":"121","hashOfConfig":"70"},{"size":3602,"mtime":1620168189373,"results":"122","hashOfConfig":"70"},{"size":1392,"mtime":1617641430196,"results":"123","hashOfConfig":"70"},{"size":3028,"mtime":1614976072868,"results":"124","hashOfConfig":"70"},{"size":900,"mtime":1619858256138,"results":"125","hashOfConfig":"70"},{"size":1005,"mtime":1619857096304,"results":"126","hashOfConfig":"70"},{"size":2212,"mtime":1618856772255,"results":"127","hashOfConfig":"70"},{"size":1688,"mtime":1620466348880,"results":"128","hashOfConfig":"70"},{"size":1299,"mtime":1618856772247,"results":"129","hashOfConfig":"70"},{"size":1946,"mtime":1620318685654,"results":"130","hashOfConfig":"70"},{"size":739,"mtime":1618856772228,"results":"131","hashOfConfig":"70"},{"size":472,"mtime":1618856772250,"results":"132","hashOfConfig":"70"},{"size":1491,"mtime":1618856772244,"results":"133","hashOfConfig":"70"},{"size":3463,"mtime":1618857525731,"results":"134","hashOfConfig":"70"},{"size":885,"mtime":1619721536943,"results":"135","hashOfConfig":"70"},{"size":3114,"mtime":1618856772234,"results":"136","hashOfConfig":"70"},{"size":691,"mtime":1619873689994,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},"1pfl46n",{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"141"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"141"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"141"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"141"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"141"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"141"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"141"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"180"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"180"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"141"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"141"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"141"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"180"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"141"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"141"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"141"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"141"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"141"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"141"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"141"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"141"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"141"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\index.js",["300","301","302"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport reducers from './reducers/index';\r\nimport App from './App';\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if(serializedState === null) return undefined\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  // other store enhancers if any\r\n);\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(reducers, persistedState, enhancer);\r\n\r\n// const store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n",["303","304"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\App.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\GlobalStyle.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\mainTheme.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\HomePage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Heading\\Heading.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Button\\Button.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Paragraph\\Paragraph.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Input\\Input.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\index.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogInPage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\RegisterPage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\UserPage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogoutPage.js",["305"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../organisms/Header';\r\nimport LogoutSection from '../organisms/LogoutSection';\r\n\r\nconst LogoutPage = () => {\r\n    return(\r\n        <>\r\n            <Header />\r\n            <LogoutSection/>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default LogoutPage;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\users.js",["306"],"export default (users = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_USERS':\r\n            return action.payload;\r\n        case 'CREATE_USER':\r\n            return [...users, action.payload];\r\n        \r\n        default:\r\n            return users;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\projects.js",["307"],"const initialState = {\r\n    projects: [],\r\n    detailsProject: {},\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_PROJECTS':\r\n            return {\r\n                ...state,\r\n                projects: action.payload,\r\n            }\r\n        case 'FETCH_DATA': \r\n            return {\r\n                ...state,\r\n                projects: action.payload.selectedProjects,\r\n            };\r\n        case 'CREATE_PROJECT':\r\n            return {\r\n                ...state,\r\n                projects: [...state.projects, action.payload],\r\n            }\r\n        case 'GET_DETAILS_PROJECT':\r\n            return {\r\n                ...state,\r\n                detailsProject: action.payload\r\n            };\r\n        case 'EDIT_PROJECT':\r\n            return {\r\n                ...state,\r\n                projects: [...state.projects].map(project => {\r\n                    if(project._id === action.payload.id){\r\n                        project = action.payload.data;\r\n                        project._id = action.payload.id;\r\n                        return project;\r\n                    }\r\n                    return project;\r\n                })\r\n            }\r\n        default:\r\n            return initialState\r\n\r\n        }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\auth.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\MainSection.tsx",["308","309","310","311"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ProjectCard from '../molecules/ProjectCard/ProjectCard';\r\nimport ArchivesCard from '../molecules/ArchivesCard/ArchivesCard';\r\nimport TasksSection from './TasksSection.js';\r\nimport InnerUserNavbar from '../molecules/InnerUserNavbar/InnerUserNavbar';\r\nimport UserContext from '../context/UserContext';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport { fetchAllProjects, fetchData } from '../actions/projects';\r\nimport { LoginButton, IdLoginButton } from '../components/Button/Button';\r\nimport RatesSection from './RatesSection';\r\nimport { ThemeContext, ThemeType } from '../context/theme';\r\nimport { fetchAllDepartments } from '../actions/departments';\r\nimport LoadingWrapper from '../molecules/LoadingWrapper/LoadingWrapper';\r\n\r\nconst Wrapper = styled.main<{ readonly typeTheme: any}>`\r\n    min-height: 100vh;\r\n    background-color: ${ props => props.typeTheme === ThemeType.Light ? '#F9FAFF' : '#09131D'};\r\n    z-index: -2; \r\n`;\r\n\r\nconst WrapperProjectCard = styled.div`\r\n    width: 100%;\r\n    margin-top: 42px;\r\n`;\r\n\r\nconst WrapperHelpdeskInfo = styled.div`\r\n    width: 50%;\r\n    height: 200px;\r\n    margin: 0 auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ParagraphHelpdesk = styled(Paragraph)<{readonly typeTheme: string}>`\r\n    margin-top: 14px;\r\n    color: ${ props => props.typeTheme === ThemeType.Light ? 'black' : 'white'};\r\n`;\r\n\r\nconst SpanHelpdesk = styled.span`\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst BtnCreateProject = styled(LoginButton)`\r\n    width: 214px;\r\n    margin-bottom: 45px;\r\n`;\r\n\r\nconst BtnLoadMore = styled(IdLoginButton)`\r\n    display: block;\r\n    margin: 50px auto;\r\n    width: 150px;\r\n`;\r\n\r\nconst SubHeadingHelpdesk = styled(SubHeading)<{ readonly typeTheme: string}>`\r\n    color: ${props => props.typeTheme === ThemeType.Light ? 'black' : 'white'};\r\n`;\r\n\r\nenum MainSectionType {\r\n    Project = 'project',\r\n    Archives = 'archives',\r\n    ProjectManager = \"projectManager\",\r\n    Tasks = 'tasks',\r\n    Data = 'data',\r\n}\r\n\r\ninterface RootState {\r\n    projects: {\r\n        name: String,\r\n        map: Function,\r\n        slice: Function,\r\n        projects: any,\r\n    };   \r\n}\r\n\r\ninterface TasksState {\r\n    tasks: {\r\n        tasks: Array<Task>,\r\n    }\r\n}\r\n\r\ninterface Task {\r\n    projectId: string | number,\r\n    brief: string,\r\n}\r\n\r\nconst MainSection :React.FC = () => {\r\n\r\n    const { user, getUser } = useContext(UserContext);\r\n    const { typeTheme, ThemeType } = useContext(ThemeContext);\r\n    const [typeOfMainSection, setTypeOfMainSection] = useState(MainSectionType.Project);\r\n    const [counterClickLoadMore, setCounterClickLoadMore] = useState(0);\r\n    const projects = useSelector( (state: RootState) => state.projects.projects);\r\n    const tasks: Array<Task> = useSelector( ( state: TasksState)=> state.tasks.tasks);\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchData());\r\n        dispatch(fetchAllDepartments())\r\n        getUser();\r\n    }, []);\r\n\r\n    // dispatchujemy odpowiednią funkcję w zależności na jaką zakładkę kliknie project manager\r\n    // w zakładce project manager - musi zarządzać wszystkimi projektami\r\n    // z kolei w zakładce projekty - musi widzieć tylko projekty do których sam należy\r\n    useEffect(() => {\r\n        if(typeOfMainSection === MainSectionType.ProjectManager ){\r\n            dispatch(fetchAllProjects())\r\n        } if(typeOfMainSection === MainSectionType.Project){\r\n            dispatch(fetchData())\r\n        }\r\n    }, [typeOfMainSection])\r\n\r\n    if(user === null || projects === null) {\r\n        return(\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n    const isAdmin = user[0].is_admin;\r\n    let superAdmin = false;\r\n    \r\n    if(user[0].hasOwnProperty('super_admin')){\r\n        console.log('super_admin');\r\n        superAdmin = user[0].super_admin;\r\n    }\r\n\r\n    let numberOfProjectOnTheOneLoad = 5;\r\n    let numberOfLoadedProjectsAtTheBeggining = 3;\r\n    let numberOfProjects = numberOfLoadedProjectsAtTheBeggining + numberOfProjectOnTheOneLoad * counterClickLoadMore;\r\n    const projectsDivide = projects.slice(0,numberOfProjects);\r\n\r\n    return(\r\n        <Wrapper typeTheme={typeTheme} >\r\n            {/* InnerUserNavbar - menu przesuwane pod profilem użytkownika */}\r\n            <InnerUserNavbar \r\n                typeFn={ (typeOfMainSection: React.SetStateAction<MainSectionType>) => setTypeOfMainSection(typeOfMainSection)}\r\n                valueOfType={typeOfMainSection} \r\n                isAdmin={isAdmin}\r\n                superAdmin={superAdmin}\r\n            />\r\n            {\r\n                typeOfMainSection === MainSectionType.Project && ( \r\n                    <WrapperProjectCard>\r\n                    {   projects.map( (project: any) =>   \r\n                            <ProjectCard  \r\n                                titleProject={project.name} \r\n                                description={project.content} \r\n                                departments={project.departments} \r\n                                projectId={project._id}\r\n                                projectTasks={tasks.filter(task => task.projectId === project._id )}\r\n                            />\r\n                            \r\n                        )\r\n                    }\r\n                    </WrapperProjectCard>\r\n                ) \r\n            }\r\n            {\r\n                typeOfMainSection === MainSectionType.Archives && (\r\n                    <WrapperProjectCard>\r\n                        <SubHeading>Brak projektów w archiwum</SubHeading>\r\n                    </WrapperProjectCard>\r\n                )\r\n            }\r\n            {\r\n                typeOfMainSection === MainSectionType.Tasks && (\r\n                    <WrapperProjectCard>\r\n                       <TasksSection />\r\n                    </WrapperProjectCard>\r\n                )\r\n            }\r\n            {\r\n                (isAdmin || superAdmin) && ( typeOfMainSection === MainSectionType.ProjectManager) && (\r\n                    <WrapperProjectCard>\r\n                        <BtnCreateProject onClick={() => history.push({\r\n                            pathname: '/homepage/project/create',\r\n                            state: {\r\n                                isEdited: false,\r\n                            }\r\n                        })}>Dodaj nowy projekt</BtnCreateProject>\r\n                        {\r\n                            projectsDivide.map((item : any) => (\r\n                                <ArchivesCard \r\n                                    admin={isAdmin} \r\n                                    key={item._id} \r\n                                    name={item.name} \r\n                                    description={item.content} \r\n                                    id={item._id} \r\n                                    customer={item.customer}\r\n                                    projectUsers={item.projectUsers} \r\n                                    hours={item.hours}\r\n                                    projectValue={item.projectValue}\r\n                                    deadline={item.deadline}\r\n                                    content={item.content}\r\n                                    departments={item.departments}\r\n                                    scopeOfWork={item.scopeOfWork}\r\n                                    assumptions={item.assumptions}\r\n                                    customerInfo={item.customerInfo}\r\n                                    />\r\n                            ))\r\n                        }\r\n                        <BtnLoadMore onClick={() => setCounterClickLoadMore(prev => prev + 1)} > Załaduj więcej </BtnLoadMore>\r\n                    </WrapperProjectCard>\r\n                )\r\n            }\r\n            {\r\n                superAdmin && (typeOfMainSection === MainSectionType.Data) && (\r\n                    <RatesSection />\r\n                )\r\n            }\r\n            <WrapperHelpdeskInfo>\r\n                <SubHeadingHelpdesk typeTheme={typeTheme}>Masz problem z obsługą planera?</SubHeadingHelpdesk>\r\n                <ParagraphHelpdesk typeTheme={typeTheme}> <SpanHelpdesk>Zgłoś się</SpanHelpdesk> do naszego helpdesku</ParagraphHelpdesk>\r\n            </WrapperHelpdeskInfo>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default MainSection;",["312","313"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Header.js",["314"],"import { useContext, useState } from 'react';\r\nimport { useHistory, withRouter } from 'react-router-dom';\r\nimport styled, { css } from 'styled-components';\r\nimport menuIcon from '../assets/menuIcon.svg';\r\nimport mailIcon from '../assets/mailIcon.svg';\r\nimport UserContext from '../context/UserContext';\r\nimport HiddenMenu from './HiddenMenu';\r\nimport { Logo } from '../components/Heading/Heading';\r\nimport { LoginButton } from '../components/Button/Button';\r\n\r\nconst Wrapper = styled.div`\r\n    height: 50px;\r\n    display: flex;\r\n    flex: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 33px;\r\n`;\r\n\r\nconst IconsDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n\r\n`;\r\n\r\nconst Icon = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n    box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.16);\r\n    border-radius: 50%;\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n\r\n    ${({ bcgIcon }) => bcgIcon && css`\r\n    \r\n        background-image: url(${bcgIcon});\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n    `}\r\n`;\r\n\r\nconst BackButton = styled(LoginButton)`\r\n    width: 60px;\r\n    height: 30px;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    border: none;\r\n    box-shadow: 2px 2px 5px 0px rgba(0, 0, 0, 0.16);\r\n    margin-left: 30px;\r\n`;\r\n\r\nconst Header = (props) => {\r\n\r\n    const { user } = useContext(UserContext);\r\n    const [showHiddenMenu, setShowHiddenMenu] = useState(false);\r\n    const history = useHistory();\r\n    const hiddenBackBtn = props.match.path === \"/homepage\" || props.match.path === \"/homepage/user\"\r\n    console.log(hiddenBackBtn);\r\n    \r\n    return(\r\n        <>\r\n            {\r\n                !showHiddenMenu && (\r\n                    <Wrapper>\r\n                        <Logo>Planner</Logo>\r\n                        <IconsDiv>\r\n                            {\r\n                                user && (\r\n                                    <>\r\n                                        <Icon bcgIcon={mailIcon} />\r\n                                    </>\r\n                                )\r\n                            }\r\n                            <Icon bcgIcon={menuIcon} onClick={() => setShowHiddenMenu(prev => !prev)} />\r\n\r\n                            {\r\n                                !hiddenBackBtn && ( <BackButton onClick={ () => history.goBack()}>Wróc</BackButton> )\r\n                            }\r\n                            \r\n\r\n                        </IconsDiv>\r\n                    </Wrapper>\r\n                )\r\n            }\r\n            <HiddenMenu isActive={showHiddenMenu} exitHiddenMenu={() => setShowHiddenMenu(false)} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Footer.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\FAQSection.js",["315"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Heading } from '../components/Heading/Heading';\r\nimport QAPlannerCard from '../molecules/QAPlannerCard/QAPlannerCard';\r\n\r\nconst Wrapper = styled.section`\r\n    width: 100vw;\r\n    min-height: 800px;\r\n`;\r\n\r\n\r\nconst FAQSection = () => {\r\n\r\n    const [activeCard, setActiveCard] = useState(false)\r\n\r\n    const handleClick = () => {\r\n        setActiveCard(!activeCard)\r\n    }\r\n\r\n    return(\r\n        <Wrapper >\r\n            <Heading>Chcesz poznać nasze narzędzie?</Heading>\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default FAQSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfileSection.js",["316","317","318"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport userIcon from '../assets/user.svg';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport { SliderTheme } from '../molecules/SliderTheme/SliderTheme';\r\nimport UserContext from '../context/UserContext';\r\nimport { ThemeContext, ThemeType } from '../context/theme';\r\nimport LoadingWrapper from '../molecules/LoadingWrapper/LoadingWrapper';\r\n\r\nconst Wrapper = styled.section`\r\n    height: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    background-color: ${ props => props.typeTheme === ThemeType.Light ? '#F9FAFF' : '#09131D'};\r\n`;\r\n\r\nconst ProfileParagraph = styled(Paragraph)`\r\n    width: 60%;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n    color: ${ props => props.typeTheme === ThemeType.Light ? '#000' : '#FFF'};\r\n`;\r\n\r\nconst BorderImageUser = styled.div`\r\n    position: relative;\r\n    width: 130px;\r\n    height: 130px;\r\n    border: 2px solid #372FFF;\r\n    border-radius: 50%;\r\n    background-color: transparent;\r\n`;\r\n\r\nconst ImageUser = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 50%;\r\n    background-image: url(${({ icon }) => icon});\r\n    padding: 40px;\r\n`;\r\n\r\nconst NameHeading = styled(SubHeading)`\r\n    font-size: 30px;\r\n    color: ${props => props.typeTheme === ThemeType.Light ? '#22005F' : '#0903B0'};\r\n`;\r\n\r\nconst PositionParagprah = styled(Paragraph)`\r\n    font-size: 20px;\r\n    color: ${props => props.typeTheme === ThemeType.Light ? 'black' : 'white'};\r\n`;\r\n\r\nconst SpanLogout = styled.span`\r\n    color: #0903B0;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ProfileSection = () => {\r\n\r\n    const { user, getUser } = useContext(UserContext);\r\n    const { typeTheme, ThemeType } = useContext(ThemeContext);\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [])\r\n\r\n    if(user === null) {\r\n        return(\r\n            <LoadingWrapper />\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Wrapper typeTheme={typeTheme}>\r\n            <ProfileParagraph typeTheme={typeTheme}>Pamiętaj, aby po zakończonej pracy <SpanLogout>wylogować się</SpanLogout> z konta</ProfileParagraph>\r\n            <BorderImageUser>\r\n                <ImageUser icon={userIcon} />\r\n            </BorderImageUser>\r\n            <NameHeading typeTheme={typeTheme}>{`${user[0].name} ${user[0].surname}`}</NameHeading>\r\n            <PositionParagprah typeTheme={typeTheme}>{`${user[0].position}`}</PositionParagprah>\r\n            <SliderTheme />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ProfileSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\JoinUsSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Banner.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\PlannerFunc.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LogoutSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\auth.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LoginSection.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\RegisterSection.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\projects.js",["319"],"import * as api from '../api';\r\n\r\nexport const createProject = (projectData, history) => async(dispatch) => {\r\n    try {\r\n\r\n        const { data } = await api.createProject(projectData)\r\n        \r\n        dispatch({ type: 'CREATE_PROJECT', payload: data})\r\n        history.push('/homepage/user');\r\n    } catch(error){\r\n        dispatch({ type: 'ERROR_CREATE_NEW_PROJECT', payload: error.response.data})\r\n    }\r\n}\r\n\r\nexport const fetchAllProjects = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchAllProjects();\r\n        const projects = data.projects;\r\n\r\n        dispatch({ type: \"FETCH_ALL_PROJECTS\", payload: projects}); \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchData = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchData();\r\n        const selectedProjects = data.projectsForLoggedUser;\r\n        const tasks = data.tasks;\r\n\r\n        dispatch({ type: \"FETCH_DATA\", payload: { selectedProjects, tasks}})\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getDetailsProject = (name) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.getDetailsProject(name)\r\n        const { project } = data;\r\n        console.log(project);\r\n        dispatch({ type: 'GET_DETAILS_PROJECT', payload: project})\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const editProject = (data, name, id, history) => async (dispatch) => {\r\n    try { \r\n        const { editProject } = await api.editProject(name, data, id);\r\n        dispatch({ type: 'EDIT_PROJECT', payload: { data, id} });\r\n        history.push('/homepage/user');\r\n    } catch (error) {\r\n        dispatch({ type: 'ERROR_EDIT_PROJECT', payload: error.response.data});\r\n    }\r\n}\r\n\r\n\r\nexport const addTaskToProject = (idProject, task) => async (dispatch) => {\r\n    try {\r\n        await api.addTaskToProject(idProject, task);\r\n\r\n        dispatch({\r\n            type: 'ADD_TASK_TO_PROJECT',\r\n            payload: { idProject, task }\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// export const editProject = (data, name, id, history) => {\r\n//     history.push('/homepage/user');\r\n//     return {\r\n//         type: 'EDIT_PROJECT',\r\n//         payload: { data, id }\r\n//     }\r\n// }","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProjectCard\\ProjectCard.js",["320","321","322","323"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\FuncPlannerCard\\FuncPlannerCard.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\QAPlannerCard\\QAPlannerCard.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Card\\Card.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ArchivesCard\\ArchivesCard.tsx",["324"],"import styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport arrayBackIcon from '../../assets/arrayBack.svg';\r\nimport { SubHeading } from '../../components/Heading/Heading';\r\nimport { Paragraph } from '../../components/Paragraph/Paragraph';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getDetailsProject } from '../../actions/projects';\r\nimport { useContext } from 'react';\r\nimport { ThemeContext, ThemeType } from '../../context/theme';\r\n\r\nconst Wrapper = styled.div<{ readonly typeTheme: string }>`\r\n    position: relative;\r\n    width: 315px;\r\n    min-height: 100px;\r\n    padding: 13px 42px;\r\n    margin: 0 auto;\r\n    box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.16);\r\n    border-radius: 10px;\r\n    margin-bottom: 25px;\r\n    background-color:  ${props => props.typeTheme === ThemeType.Light ? '#FFF' : '#F8FAFE'};\r\n`;\r\n\r\nconst ArrayBackIcon = styled.img`\r\n    position: absolute;\r\n    top: 10%;\r\n    right: 5%;\r\n`;\r\n\r\nconst ArchivesHeading = styled(SubHeading)`\r\n    text-align: left;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst WrapperLinkInCard = styled.div`\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-top: 20px;\r\n`;\r\n\r\nconst LinkInCard = styled(Paragraph)`\r\n    color: #372FFF;\r\n    font-weight: 600;\r\n    cursor: pointer;\r\n`;\r\n\r\ninterface Props {\r\n    admin: boolean,\r\n    name: String,\r\n    description: String,\r\n    id: Number ,\r\n    projectUsers: Array<Number>,\r\n    customer: String,\r\n    hours: Number, \r\n    projectValue: Number,\r\n    deadline: Date,\r\n    content: String,\r\n    departments: Array<String>,\r\n    scopeOfWork: String, \r\n    assumptions: String,\r\n    customerInfo: String,\r\n}\r\n\r\nconst ArchivesCard = ({ admin, name, description, id, projectUsers, customer, hours, projectValue, departments, deadline, content, assumptions, scopeOfWork, customerInfo } : Props) => {\r\n    \r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { typeTheme, ThemeType } = useContext(ThemeContext);\r\n\r\n    const handleDetailsProjectClick = () => {\r\n        dispatch(getDetailsProject(name));\r\n        history.push({\r\n            pathname: `/homepage/project/${name}`,\r\n            state: {\r\n                id,\r\n                name,\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Wrapper typeTheme={typeTheme}>\r\n            <ArchivesHeading>{name}</ArchivesHeading>\r\n            <Paragraph> {description} </Paragraph>\r\n            {\r\n               !admin && <ArrayBackIcon src={arrayBackIcon} alt=\"ikonka powrotu do poprzedniej strony\" />\r\n            }\r\n            {\r\n                admin && (\r\n                    <WrapperLinkInCard>\r\n                        <LinkInCard onClick={() => history.push({\r\n                            pathname: `/homepage/project/edit/${name}`,\r\n                            state: {\r\n                                isEdited: true,\r\n                                name,\r\n                                customer,\r\n                                hours,\r\n                                description,\r\n                                projectValue,\r\n                                projectUsers,\r\n                                departments,\r\n                                deadline,\r\n                                id,\r\n                                content,\r\n                                assumptions,\r\n                                scopeOfWork,\r\n                                customerInfo\r\n                            }\r\n                        })}>Edytuj</LinkInCard>\r\n                        <LinkInCard onClick={() => history.push({\r\n                            pathname: '/homepage/project/tasks',\r\n                            state: {\r\n                                id,\r\n                                projectUsers,\r\n                                name,\r\n                            }\r\n                        })}>Przydziel zadania</LinkInCard>\r\n                        <LinkInCard onClick={() => handleDetailsProjectClick()}>Szczegóły</LinkInCard>\r\n                    </WrapperLinkInCard>\r\n                )\r\n            }\r\n        </Wrapper>\r\n    )\r\n} \r\n\r\nexport default ArchivesCard;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\users.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Form\\RegisterForm.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Label\\Label.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\api\\index.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\TaskCard\\TaskCard.tsx",["325","326","327"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SubSubHeading } from '../../components/Heading/Heading';\r\nimport { Paragraph } from '../../components/Paragraph/Paragraph';\r\nimport { SliderTask } from '../SliderTheme/SliderTheme';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 315px;\r\n    min-height: 100px;\r\n    padding: 15px 20px;\r\n    margin: 0 auto;\r\n    box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.16);\r\n    border-radius: 10px;\r\n    margin-bottom: 25px;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n\r\n`;\r\n\r\nconst HeaderTaskCard = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    margin-bottom: 12px;\r\n`;\r\n\r\nconst MiddlePart = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`;\r\n\r\nconst WrapperLoadingBar = styled.div`\r\n    width: 275px;\r\n    height: 2px;\r\n    background-color: rgb(112,112,112, 0.4);\r\n    margin: 12px 0 5px 0;\r\n`;\r\n\r\nconst WrapperTimeTask = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n\r\n`;\r\n\r\ninterface Props {\r\n    division: String;\r\n    title: String;\r\n    time: Number;\r\n}\r\n\r\nconst TaskCard: React.FC<Props> = ({ division, title, time }) => {\r\n\r\n    const [activeTask, setActiveTask] = useState(false);\r\n\r\n    const handleClick = (): void => {\r\n        setActiveTask(!activeTask);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <HeaderTaskCard>\r\n                <SubSubHeading onClick={() => console.log('click')} >{division}</SubSubHeading>\r\n                <SliderTask onClick={() => console.log('klik')} activeHandle={() => handleClick()} activeTask={activeTask} />\r\n            </HeaderTaskCard>\r\n            <MiddlePart> \r\n                <Paragraph>{title}</Paragraph>\r\n                <Paragraph>Zakończ</Paragraph>\r\n            </MiddlePart>\r\n            <WrapperLoadingBar></WrapperLoadingBar>\r\n            <WrapperTimeTask>\r\n                <Paragraph>00:00:00</Paragraph>\r\n                <Paragraph>{time}</Paragraph>\r\n            </WrapperTimeTask>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default TaskCard;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\context\\UserContext.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\errors.js",["328"],"export default (errors = [], action) => {\r\n    switch(action.type){\r\n        case 'ERROR_LOGIN_USER':\r\n            return action.payload;\r\n        case 'ERROR_REGISTER_USER':\r\n            return action.payload;\r\n        case 'ERROR_CREATE_NEW_PROJECT':\r\n            return action.payload;\r\n        case 'ERROR_CREATE_NEW_TASK':\r\n            return action.payload;\r\n        case 'ERROR_EDIT_PROJECT':\r\n            return action.payload;\r\n        default:\r\n            return errors;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ErrorMessage\\ErrorMessage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\util\\domain.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\CreateProject.js",["329","330","331","332"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PersonToProject from '../molecules/PersonToProject/PersonToProject';\r\nimport Footer from '../organisms/Footer';\r\nimport Header from '../organisms/Header';\r\nimport TextArea from '../components/TextArea/TextArea';\r\nimport { Heading, SubHeading } from '../components/Heading/Heading';\r\nimport { LoginButton } from '../components/Button/Button';\r\nimport LabelSection from '../organisms/LabelSection';\r\nimport { Input } from '../components/Input/Input';\r\nimport { fetchAllUsers } from '../actions/users';\r\nimport { addActiveDepartmentFromEdit  } from '../actions/departments';\r\nimport { createProject, editProject, fetchAllProjects } from '../actions/projects';\r\nimport ErrorMessage from '../molecules/ErrorMessage/ErrorMessage';\r\n\r\nconst CreateProjectFormDiv = styled.div`\r\n    max-width: 275px;\r\n    margin: 50px auto 0 auto;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-top: 51px;\r\n`;\r\n\r\nconst AssignmentSection = styled.section`\r\n    max-width: 275px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst MarksSection = styled.section`\r\n    max-width: 275px;\r\n    margin: 50px auto 0px auto;\r\n`;\r\n\r\nconst CreateBtn = styled(LoginButton)`\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst CustomerTextArea = styled(TextArea)`\r\n    min-height: 100px;\r\n    width: 300px;\r\n    border-radius: 20px;\r\n    padding: 10px 10px 10px 15px;\r\n    margin: 10px auto;\r\n\r\n    ::placeholder{\r\n        padding-left: 25px;\r\n        color: rgb(55, 47, 255, 0.5);\r\n    }\r\n`;\r\n\r\nconst initialProjectData = {\r\n    name: '',\r\n    customer: '',\r\n    deadline: '',\r\n    hours: '',\r\n    projectValue: '',\r\n    content: '',\r\n    assumptions: '',\r\n    scopeOfWork: '',\r\n    customerInfo: '',\r\n}\r\n\r\nconst CreateProject = (props) => {\r\n    \r\n    const [projectData, setProjectData] = useState(initialProjectData);\r\n    const [department, setDepartemnt] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [ status, setStatus] = useState(false);\r\n    const [ idUsersAssignToProject, setIdUsersAssignToProject] = useState([]); //id użytkowników przypisanych (klikniętych) do wykonania projektu\r\n    const [ changeDetektor, setChangeDetektor] = useState(false);\r\n    \r\n    // flagi dzięki którym dane z edytowanego projektu będą uruchamiane w useEffect tylko raz, po pierwszym uruchomieniu damy false\r\n    const [ isEditedDataUpdate, setIsEditedDataUpdate ] = useState(true); \r\n    const [ isEditedIdAssign, setIsEditedIdAssign ] = useState(true);\r\n    \r\n    const dispatch = useDispatch();\r\n    const fetchUsers = useSelector(state => state.users);\r\n    const fetchDepartments = useSelector(state => state.departments);\r\n    const errorMessage = useSelector(state => state.errors.message);\r\n    const history = useHistory();\r\n    const { isEdited, name, customer, hours, projectValue, deadline, content, projectUsers, departments, id, scopeOfWork, assumptions, customerInfo } = props.location.state;\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllUsers());\r\n        setUsers(fetchUsers);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       setDepartemnt(fetchDepartments);\r\n       if(isEdited && isEditedDataUpdate){\r\n            dispatch(addActiveDepartmentFromEdit(departments)); \r\n            dispatch(fetchAllProjects());\r\n            setIsEditedDataUpdate(false);\r\n            setProjectData({\r\n                ...projectData,\r\n                name: name,\r\n                customer: customer,\r\n                deadline: deadline,\r\n                hours: hours,\r\n                projectValue: projectValue,\r\n                content: content, \r\n                projectUsers: projectUsers,\r\n                departments: departments,\r\n                scopeOfWork: scopeOfWork,\r\n                assumptions: assumptions,\r\n                customerInfo: customerInfo,\r\n            })\r\n            return\r\n       }\r\n       setProjectData({\r\n        ...projectData,\r\n        departments: [...nameActiveDepartments]\r\n    })\r\n    }, [status])    \r\n\r\n    useEffect(()=>{\r\n        if(isEdited && isEditedIdAssign){\r\n            setIdUsersAssignToProject(projectUsers);\r\n            setIsEditedIdAssign(false);\r\n            return;\r\n        }\r\n        setIdUsersAssignToProject(idUsersAssignToProject);\r\n    }, [changeDetektor])\r\n\r\n    //activeDepartments - nazwy działów które zostały wybrane do realizacji projektu\r\n    let activeDepartments = department.filter(item => item.active);\r\n    let nameActiveDepartments = activeDepartments.map(item => item.name);\r\n    console.log(nameActiveDepartments);\r\n\r\n    const assignUsersToSelectedDepartment = (user) => {\r\n        let amountConditions = nameActiveDepartments.length;\r\n        let i = 0;\r\n        while(i < amountConditions){\r\n            if(user.department === nameActiveDepartments[i]){\r\n                return user\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    //userzy z działów, które zostały wybrane\r\n    const usersFromSelectedDepartments = fetchUsers.filter(assignUsersToSelectedDepartment);  \r\n\r\n    const handleChange = (e) => {\r\n        if(isEdited && isEditedDataUpdate){\r\n            console.log(projectData);\r\n            return;\r\n        }\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        setProjectData({\r\n            ...projectData,\r\n            [name]:e.target.value\r\n        });\r\n    }\r\n\r\n    // let projectUsers = [];\r\n    //funkcja usuwająca użytkownika z tablicy, gdy admin kliknie drugi raz (czyli odkliknie udział użytkownika w projekcie)\r\n    const handleAssignIdUserToProject = (id, department) => {\r\n        \r\n        // sprawdzamy czy jakiś użytkownik nie został wcześniej do projektu przypisany\r\n        if(typeof idUsersAssignToProject !== \"undefined\" && idUsersAssignToProject.length > 0){\r\n            // jeśli ktoś już jest to sprawdzamy czy czasami przed chwilą kliknięty pracownik, to nie jest ten, który został już wcześniej przypisany do tego projektu\r\n            // mówiąc prościej czy pracownik nie został klinięty drugi raz -> czyli odklinięty\r\n            const foundExistingId = idUsersAssignToProject.includes(id);\r\n            \r\n            if(foundExistingId){\r\n                // jeśli istnieje, to musimy go usunąć z tablicy\r\n                const filteredArray = idUsersAssignToProject.filter(item => item !== id );\r\n        \r\n                setProjectData({\r\n                    ...projectData,\r\n                    projectUsers: filteredArray\r\n                })\r\n                return setIdUsersAssignToProject(filteredArray) //zwracamy tablicę bez usuniętego id              \r\n                \r\n            }\r\n        }\r\n\r\n        // sprawdzamy czy dział ostanio używanego u\r\n        const filteredActiveDepartment = nameActiveDepartments.includes(department);\r\n        if(filteredActiveDepartment){\r\n            setIdUsersAssignToProject([\r\n                ...idUsersAssignToProject,\r\n                id\r\n            ])\r\n            \r\n            setProjectData({\r\n                ...projectData,\r\n                projectUsers: [\r\n                    ...idUsersAssignToProject,\r\n                    id\r\n                ]\r\n            })\r\n        } \r\n        setChangeDetektor(!changeDetektor);\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            if(isEdited){\r\n                console.log(projectData);\r\n                dispatch(editProject(projectData, name, id, history));\r\n                return;\r\n            }\r\n            \r\n            dispatch(createProject(projectData, history));\r\n            console.log(projectData);\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    \r\n    }\r\n\r\n    return(\r\n       <>\r\n            <Header />\r\n            <CreateProjectFormDiv>\r\n                <Heading>\r\n                    {\r\n                        isEdited ? ( name ) : (\"Nowy projekt\")     \r\n                    }    \r\n                </Heading>\r\n                <Form id=\"project-form\" onSubmit={(e) => handleSubmit(e)}>\r\n                    <Input placeholder=\"Nazwa projektu\" type=\"string\" name=\"name\" onChange={ (e) => handleChange(e) } value={projectData.name} />\r\n                    <Input placeholder=\"Klient\" type=\"string\" name=\"customer\" onChange={ (e) => handleChange(e)} value={projectData.customer} />\r\n                    <CustomerTextArea placeholder=\"Krótki opis klienta\" name=\"customerInfo\" onChange={(e) => handleChange(e)} value={projectData.customerInfo} />\r\n                    <Input placeholder=\"Termin oddania projektu\" type=\"date\" name=\"deadline\" onChange={ (e) => handleChange(e) } value={projectData.deadline} />\r\n                    <Input placeholder=\"Ilość godzin na projekt\" type=\"number\" name=\"hours\" onChange={ (e) => handleChange(e) } value={projectData.hours} />\r\n                    <Input placeholder=\"Wartość projektu w PLN\" type=\"number\" name=\"projectValue\" onChange={ (e) => handleChange(e) } value={projectData.projectValue} />\r\n                \r\n                    <SubHeading>Opisz założenia projektowe</SubHeading>\r\n                    <TextArea placeholder=\"Treść wiadomości\" name=\"assumptions\" onChange={(e) => handleChange(e)} value={projectData.assumptions} />\r\n                    <SubHeading>Opisz zakres pracy <br /> w ramach projektu</SubHeading>\r\n                    <TextArea placeholder=\"Treść wiadomości\" name=\"scopeOfWork\" onChange={(e) => handleChange(e)} value={projectData.scopeOfWork} />\r\n                </Form>\r\n            </CreateProjectFormDiv>\r\n            {/* changeStatus - funkcja sprawdzająca czy został kliknięty jakikolwiek Label - efektem jest zmiana statusu boolean na przeciwny, co powoduje przerenderowanie komponentu\r\n            w celu pobrania zaktualizowanych statusów department */}\r\n            <LabelSection title=\"Wybierz dział odpowiedzialny za projekt\" category=\"department\" changeStatus={() => setStatus(!status)} />\r\n            <AssignmentSection>\r\n                <SubHeading>Przypisz osoby <br /> pracujące przy projekcie</SubHeading>\r\n                {\r\n                    usersFromSelectedDepartments.map(user => {\r\n                        return(\r\n                            <PersonToProject\r\n                                key={user._id}\r\n                                id={user._id} \r\n                                position={user.position} \r\n                                name={user.name}\r\n                                surname={user.surname} \r\n                                department={user.department}\r\n                                assignUserToProject={ () => handleAssignIdUserToProject(user._id, user.department)}\r\n                                assignUsersFromEditProject={projectUsers}\r\n                                isFromEdition={isEdited}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </AssignmentSection>\r\n            <MarksSection>\r\n                <SubHeading>Przekaż wytyczne<br /> dotyczące projektu</SubHeading>\r\n                <TextArea placeholder=\"Treść wiadomości\" form=\"project-form\" name=\"content\" onChange={(e) => handleChange(e)} value={projectData.content} />\r\n            </MarksSection>\r\n            { errorMessage && <ErrorMessage error={errorMessage} /> }\r\n            <CreateBtn form=\"project-form\">{ isEdited ? ('Edytuj') : ('Utwórz projekt') }</CreateBtn>\r\n\r\n            <Footer />\r\n       </>\r\n    )\r\n}\r\n\r\nexport default CreateProject;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\CreateProjectForm.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\PersonToProject\\PersonToProject.js",["333"],"import React, { useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport userIcon from '../../assets/user.svg';\r\nimport acceptingIcon from '../../assets/accept.svg';\r\nimport { SubHeading } from '../../components/Heading/Heading';\r\nimport { Paragraph } from '../../components/Paragraph/Paragraph';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 15px 0px;\r\n\r\n    :first-of-type{\r\n        margin-top: 50px;\r\n    }\r\n`;\r\n\r\nconst BorderImg = styled.div`\r\n    position: relative;\r\n    width: 51px;\r\n    height: 51px;\r\n    border: 2px solid #372FFF;\r\n    border-radius: 50%;\r\n    background-color: transparent;\r\n`;\r\n\r\nconst Img = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n    background-image: url(${({ icon }) => icon});\r\n    \r\n`;\r\n\r\nconst MiddleDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-evenly;\r\n`;\r\n\r\nconst RightDiv = styled.div`\r\n    border: 1px solid #D1D1D1;\r\n    width: 41px;\r\n    height: 41px;\r\n    background-color: #D1D1D1;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    background-image: none;\r\n\r\n    ${({ userSelect }) => userSelect && css`\r\n        background-image: url(${({ icon }) => icon });\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-color: #00BD51;\r\n    `}\r\n`;\r\n\r\nconst PersonToProject = ({ name, surname, position, id, department, assignUserToProject, assignUsersFromEditProject, isFromEdition }) => {\r\n\r\n    const [ isAccept, setIsAccept ] = useState(false);\r\n    const [ usedEditionData , setUsedEditionData ] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if(isFromEdition){\r\n            assignUsersFromEdition(assignUsersFromEditProject);\r\n        }\r\n    },[])\r\n\r\n    const handleClick = () => {\r\n        setIsAccept(prev => !prev);\r\n        assignUserToProject(id, department);\r\n    }\r\n\r\n    const assignUsersFromEdition = (usersId) => {\r\n        if(usedEditionData){\r\n            setUsedEditionData(false);\r\n            if(usersId.length > 1){\r\n                if(usersId.includes(id)){\r\n                    setIsAccept(true);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n             <BorderImg>\r\n                 <Img icon={userIcon} />\r\n             </BorderImg>\r\n             <MiddleDiv>\r\n                <SubHeading>{name} {surname}</SubHeading>\r\n                <Paragraph>{position}</Paragraph>\r\n             </MiddleDiv>\r\n             <RightDiv icon={acceptingIcon} onClick={() => handleClick()} userSelect={isAccept} />\r\n             {/* userSelect = true - oznaczenie usera ptaszkiem */}\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default PersonToProject;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\InnerUserNavbar\\InnerUserNavbar.tsx",["334"],"import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport leftArrow from '../../assets/leftArrayNavbar.svg';\r\nimport rightArrow from '../../assets/rightArrayNavbar.svg';\r\nimport { SubHeading } from '../../components/Heading/Heading';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    width: 315px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst ArrowRight = styled.img`\r\n    display: block;\r\n`;\r\n\r\nconst LeftArrow = styled.img`\r\n    display: block;\r\n`;\r\n\r\nconst WrapperNavbar = styled.div<{readonly shift: number}>`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    width: 283px;\r\n    margin: 0 auto;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst NavSubHeading = styled(SubHeading)<{ readonly active: boolean}>`\r\n    font-size: 12px;\r\n    color: #0903B0;\r\n\r\n    ${({ active }) => active && css`\r\n        color: white;\r\n    `}\r\n`;\r\n\r\nconst DivElemNavbar = styled.div<{ readonly active: boolean; readonly shift: number}>`\r\n    width: 90px;\r\n    min-width: 90px;\r\n    height: 43px;\r\n    box-shadow: 0px 1px 2px 1px rgba(0,0,0,0.10);\r\n    border-radius: 5px;\r\n    margin: 5px 5px 5px 0;\r\n    transform: translateX(calc( -95px * ${({ shift }) => shift} ));   \r\n    \r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n\r\n    ${({ active }) => active && \r\n        css`\r\n            background-color: #0903B0;\r\n            color: white;\r\n        `}\r\n`;\r\n\r\nenum MainSectionType {\r\n    Project = 'project',\r\n    Archives = 'archives',\r\n    ProjectManager = \"projectManager\",\r\n    Tasks = 'tasks'\r\n}\r\n\r\ninterface Props {\r\n    valueOfType: MainSectionType,\r\n    typeFn: Function,\r\n    isAdmin: boolean;\r\n}\r\n\r\n\r\nconst InnerUserNavbar = ({ typeFn, valueOfType, isAdmin }: Props) => {\r\n\r\n    // ustawienia dla arrows 0 - widzimy pierwszy kafelek - blokujemy możliwość dalszego przesuwania w prawo  [1][2][3]>\r\n    // ustawienia dla arrows 1 - widzimy ostatni kafelek  - blokujemy możliwość dalszego przesuwania w lewo  <[2][3][4]\r\n    const [arrowOptions, setArrowOptions] = useState(0);\r\n\r\n\r\n    // const isAdmin = true;\r\n    return(\r\n        <Wrapper>\r\n            { arrowOptions === 1 && isAdmin && <LeftArrow src={leftArrow} onClick={ () => setArrowOptions(0) } /> }\r\n            <WrapperNavbar shift={arrowOptions}>\r\n                <DivElemNavbar active={ valueOfType === MainSectionType.Project } onClick={() => typeFn(MainSectionType.Project)} shift={arrowOptions}>\r\n                    <NavSubHeading active ={ valueOfType === MainSectionType.Project} >Projekty</NavSubHeading>\r\n                </DivElemNavbar>\r\n                <DivElemNavbar active={ valueOfType === MainSectionType.Archives } onClick={() => typeFn(MainSectionType.Archives)} shift={arrowOptions}>\r\n                    <NavSubHeading active={ valueOfType === MainSectionType.Archives } >Archiwum projektów</NavSubHeading>\r\n                </DivElemNavbar>\r\n                {\r\n                    isAdmin && ( \r\n                        <DivElemNavbar active={ valueOfType === MainSectionType.ProjectManager } onClick={() => typeFn(MainSectionType.ProjectManager)} shift={arrowOptions}>\r\n                            <NavSubHeading active={ valueOfType === MainSectionType.ProjectManager }>Menedżer projektów</NavSubHeading> \r\n                        </DivElemNavbar> )\r\n                }\r\n                <DivElemNavbar active={ valueOfType === MainSectionType.Tasks } onClick={() => typeFn(MainSectionType.Tasks)} shift={arrowOptions}>\r\n                    <NavSubHeading active={ valueOfType === MainSectionType.Tasks } >Lista zadań</NavSubHeading>\r\n                </DivElemNavbar>\r\n            </WrapperNavbar>\r\n            { arrowOptions === 0 && isAdmin && <ArrowRight src={rightArrow} onClick={() => setArrowOptions(1)} /> }\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default InnerUserNavbar;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\TextArea\\TextArea.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\TasksToProject.js",["335","336","337"],"import React, { useEffect, useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport Footer from '../organisms/Footer';\r\nimport Header from '../organisms/Header';\r\nimport PersonToProject from '../molecules/PersonToProject/PersonToProject';\r\nimport LabelSection from '../organisms/LabelSection';\r\nimport TextArea from '../components/TextArea/TextArea';\r\nimport acceptingIcon from '../assets/accept.svg';\r\nimport ErrorMessage from '../molecules/ErrorMessage/ErrorMessage';\r\nimport { Heading, SubHeading } from '../components/Heading/Heading';\r\nimport { LoginButton } from '../components/Button/Button';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport { Input } from '../components/Input/Input';\r\nimport { createNewTask, getEmpty } from '../actions/tasks';\r\nimport { addTaskToProject } from '../api';\r\n\r\n\r\nconst AssignmentSection = styled.section`\r\n    max-width: 275px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst FormSection = styled.section`\r\n    max-width: 275px;\r\n    margin: 50px auto 0px auto;\r\n`;\r\n\r\nconst ConfirmDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    max-width: 275px;\r\n`;\r\n\r\nconst ConfirmBtn = styled(LoginButton)`\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst ConfirmBox = styled.div`\r\n    border: 1px solid #D1D1D1;\r\n    width: 41px;\r\n    height: 41px;\r\n    background-color: #D1D1D1;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    background-image: none;\r\n\r\n    ${({ userSelect }) => userSelect && css`\r\n        background-image: url(${({ icon }) => icon });\r\n        background-position: center;\r\n        background-repeat: no-repeat;\r\n        background-color: #00BD51;\r\n    `}\r\n`;\r\n\r\nconst ParagraphBox = styled(Paragraph)`\r\n    width: 70%;\r\n`;\r\n\r\nconst ParagraphNote = styled(Paragraph)`\r\n    color: #0903B0;\r\n    text-align: center;\r\n`;\r\n\r\nconst SpanNote = styled.span`\r\n    font-weight: 700;\r\n`;\r\n\r\nconst SubHeadingForm = styled(SubHeading)`\r\n    margin: 30px auto;\r\n`;\r\n\r\nconst initialTaskData = {\r\n    title: '',\r\n    brief: '',\r\n    time: '',\r\n    guidelines: '',\r\n}\r\n\r\nconst TasksToProject = (props) => {\r\n\r\n    const [taskData, setTaskData] = useState(initialTaskData);\r\n    const [isAccept, setIsAccept] = useState(false);\r\n    const [halfTimeRaport, setHalfTimeRaport] = useState(false);\r\n    const [idUserAssign, setIdUserAssign] = useState([]); \r\n    const [changeDetektor, setChangeDetektor] = useState(false);\r\n    const [status, setStatus] = useState(false);\r\n    const users = useSelector(state => state.users);\r\n    const categoryTask = useSelector(state => state.tasks.categoryTask);\r\n    const errorMessage = useSelector(state => state.errors.message);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const { id, projectUsers, name } = props.location.state;\r\n\r\n    useEffect(() => {\r\n        setIdUserAssign(idUserAssign);\r\n        dispatch(getEmpty());\r\n    }, [changeDetektor]);\r\n\r\n    useEffect(()=> {\r\n        setTaskData({\r\n            ...taskData,\r\n            categoryTask,\r\n            projectId: id,\r\n            projectName: name,\r\n        })\r\n    }, [status])\r\n\r\n    useEffect(()=>{\r\n        setTaskData({\r\n            ...taskData,\r\n            halfTimeRaport\r\n        })\r\n    },[isAccept])\r\n\r\n    const handleAssignIdUserToProject = (id, department) => {\r\n         // sprawdzamy czy jakiś użytkownik nie został wcześniej do zadania przypisany\r\n         if(typeof idUserAssign !== \"undefined\" && idUserAssign.length > 0){\r\n            // jeśli ktoś już jest to sprawdzamy czy czasami przed chwilą kliknięty pracownik, to nie jest ten, który został już wcześniej przypisany do tego projektu\r\n            // mówiąc prościej czy pracownik nie został klinięty drugi raz -> czyli odklinięty\r\n            const foundExistingId = idUserAssign.includes(id);\r\n            \r\n            if(foundExistingId){\r\n                // jeśli istnieje, to musimy go usunąć z tablicy\r\n                const filteredArray = idUserAssign.filter(item => item !== id );\r\n        \r\n                setTaskData({\r\n                    ...taskData,\r\n                    taskUsers: filteredArray\r\n                })\r\n                return setIdUserAssign(filteredArray) //zwracamy tablicę bez usuniętego id              \r\n                \r\n            }\r\n        }\r\n        setIdUserAssign([\r\n            ...idUserAssign,\r\n            id\r\n        ])\r\n        setTaskData({\r\n            ...taskData,\r\n            taskUsers: [...idUserAssign, id]\r\n        })\r\n\r\n        setChangeDetektor(!changeDetektor);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        setTaskData({\r\n            ...taskData,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n        \r\n    }\r\n\r\n    const handleClickBox = (e) => {\r\n        e.preventDefault();\r\n        setHalfTimeRaport(prev => !prev);\r\n        setIsAccept(prev => !prev);\r\n        setTaskData({\r\n            ...taskData,\r\n            halfTimeRaport,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        try { \r\n            e.preventDefault();\r\n            dispatch(createNewTask(taskData, history));\r\n            dispatch(addTaskToProject(id, taskData));\r\n            console.log(taskData);\r\n        } catch (error) {\r\n            console.log(error); \r\n        }\r\n    }\r\n    // potrzebujemy wiedzieć kto jest przypisany do projektu - tylko tym osobom możemy przypisać zadanie w ramach projektu\r\n    // id projektu, id osób w projekcie \r\n\r\n    const usersInProject = users.filter(user => projectUsers.includes(user._id));\r\n\r\n    return(\r\n        <>\r\n            <Header/>\r\n            <Heading> {name} </Heading>\r\n            <AssignmentSection>\r\n                <SubHeading>Przydziel zadania do projektu</SubHeading>\r\n                {\r\n                    usersInProject.map(user => (\r\n                        <PersonToProject \r\n                            key={user._id}\r\n                            id={user._id}\r\n                            name={user.name}\r\n                            surname={user.surname}\r\n                            position={user.position}\r\n                            department={user.department}\r\n                            assignUserToProject={ () => handleAssignIdUserToProject(user._id, user.department)}\r\n                        />\r\n                    ))\r\n                }\r\n            </AssignmentSection>\r\n            <LabelSection title=\"Wybierz kategorię zadania\" category=\"tasks\" changeStatus={() => setStatus(!status)} />\r\n            <FormSection>\r\n                <form id=\"task-form\" onSubmit={(e) => handleSubmit(e)}>\r\n                    <Input placeholder=\"Nazwa zadania\" type=\"string\" name=\"title\" value={taskData.title} onChange={(e) => handleChange(e)} />\r\n                    <Input placeholder=\"Skrócony opis zadania\" type=\"string\" name=\"brief\" value={taskData.brief} onChange={(e) => handleChange(e)} />\r\n                    <Input placeholder=\"Podaj czas pracy w minutach\" type=\"number\" name=\"time\" value={taskData.time} onChange={(e) => handleChange(e)} />\r\n                    <ParagraphNote><SpanNote>Uwaga!</SpanNote> W ramach tego projektu <br/>zostało do zagospodarowania <SpanNote>47 godzin</SpanNote></ParagraphNote>\r\n                    <SubHeadingForm>Opisz zakres pracy<br /> w ramach zadania</SubHeadingForm>\r\n                    <TextArea placeholder=\"Treść wiadomości\" name=\"guidelines\" value={taskData.guidelines} onChange={(e) => handleChange(e)} />\r\n                    <ConfirmDiv>\r\n                        <ConfirmBox icon={acceptingIcon} onClick={(e) => handleClickBox(e)} userSelect={isAccept} />\r\n                        <ParagraphBox >Poproś o raport z postępu prac po upływie 50% czasu.</ParagraphBox>\r\n                    </ConfirmDiv>\r\n                    {errorMessage && <ErrorMessage error={errorMessage} />}\r\n                    <ConfirmBtn form=\"task-form\">Zatwierdź zadanie</ConfirmBtn>\r\n                </form>\r\n            </FormSection>\r\n\r\n            <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TasksToProject;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\AsideSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LabelSection.js",["338","339","340","341"],"import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Label from '../molecules/Label/Label';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport { Input } from '../components/Input/Input';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\n\r\nconst Wrapper = styled.section`\r\n     max-width: 300px;\r\n     margin: 0 auto 45px auto;\r\n     padding-top: 75px;\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst LabelSection = ({ title, category, changeStatus, giveMeTimeTask }) => {\r\n\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [timeTaskValue, setTimeTaskValue] = useState();\r\n\r\n    const handleChangeStatus = () => {\r\n        setIsActive(!isActive);\r\n        changeStatus(isActive);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e);\r\n        setTimeTaskValue(e.target.value);\r\n        giveMeTimeTask(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n                <SubHeading>{title}</SubHeading>\r\n                <LabelWrapper>\r\n\r\n                    { category === \"tasks\" && (\r\n                        <>\r\n                         <Label division=\"UX/UI\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Copywriting\" type=\"task\" getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Branding\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Development\" type=\"task\"  getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Spotkanie organizacyjne\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Testy\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Marketing\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Konsultacje\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                        </>\r\n                    )}\r\n                     { category === \"department\" && (\r\n                        <>\r\n                         <Label division=\"Dział graficzny\" name=\"graphic\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Dział marketingu\" name=\"marketing\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Dział programistyczny\" name=\"programming\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Administracja\" name=\"administration\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Testerzy\" name=\"tester\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Dział handlowy\" name=\"sales\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                        </>\r\n                    )\r\n                    }\r\n                </LabelWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default LabelSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\DetailsProject.js",["342","343","344"],"import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport AsideSection from '../organisms/AsideSection';\r\nimport Footer from '../organisms/Footer';\r\nimport Header from '../organisms/Header';\r\nimport ProfabilityProjectSection from '../organisms/ProfitabilityProjectSection';\r\nimport timeIcon from '../assets/timeProject.svg';\r\nimport { Heading, SubHeading } from '../components/Heading/Heading';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDetailsProject } from '../actions/projects';\r\nimport LoadingWrapper from '../molecules/LoadingWrapper/LoadingWrapper';\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 100px 36px 0 36px;\r\n`;\r\n\r\nconst DetailsSubHeading = styled(SubHeading)`\r\n\r\n`;\r\n\r\nconst TimeProjectHeading = styled(SubHeading)`\r\n    margin-bottom: 67px;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst TimeProjectWrapper = styled.div`\r\n    margin: 0 auto 50px auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: center;\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n    width: 35px;\r\n    height: 35px;\r\n    box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.16);\r\n    border-radius: 5px;\r\n    background-image: url(${timeIcon});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    \r\n`;\r\n\r\nconst MiddleSide = styled.div`\r\n    flex-grow: 3;\r\n    margin-left: 30px;\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n\r\n`;\r\n\r\nconst DetailsParagraph = styled(Paragraph)`\r\n    margin: 30px auto;\r\n`;\r\n\r\nconst TitleParagraph = styled(Paragraph)`\r\n    font-weight: 800;\r\n`;\r\n\r\nconst SubtitleParagraph = styled(Paragraph)`\r\n    color: #A5A5A5;\r\n`;\r\n\r\nconst DetailsProject = (props) => {\r\n\r\n    const { name } = props.location.state;\r\n    const detailsProject = useSelector(state => state.projects.detailsProject);\r\n    const dispatch = useDispatch();\r\n    console.log(detailsProject);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetailsProject(name));\r\n    }, []);\r\n\r\n    if(detailsProject === null || detailsProject === undefined || Object.keys(detailsProject).length === 0 ){\r\n        return(\r\n            <LoadingWrapper/>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Header/>\r\n        <Wrapper>\r\n            <Heading>{detailsProject.name}</Heading>\r\n            <DetailsSubHeading>Specyfikacja projektowa</DetailsSubHeading>\r\n            <DetailsParagraph>\r\n                {detailsProject.assumptions} <br/>\r\n                {detailsProject.content}\r\n            </DetailsParagraph>\r\n            <DetailsSubHeading>{detailsProject.customer}</DetailsSubHeading>\r\n            <DetailsParagraph>{detailsProject.customerInfo}</DetailsParagraph>\r\n            <TimeProjectHeading>Czas pracy nad projektem</TimeProjectHeading>\r\n            <TimeProjectWrapper>\r\n                <LeftSide/>\r\n                <MiddleSide>\r\n                    <TitleParagraph>Realizacja</TitleParagraph>\r\n                    <SubtitleParagraph>W realizacji</SubtitleParagraph>\r\n                </MiddleSide>\r\n                <RightSide>\r\n                    {detailsProject.hours}H\r\n                </RightSide>\r\n            </TimeProjectWrapper>\r\n            <DetailsSubHeading>Zakres pracy <br/> w ramach projektu</DetailsSubHeading>\r\n            <DetailsParagraph>{detailsProject.scopeOfWork}</DetailsParagraph>\r\n            <DetailsSubHeading>Rentowność projektu</DetailsSubHeading>\r\n            <ProfabilityProjectSection projectValue={detailsProject.projectValue}/>\r\n        </Wrapper>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailsProject;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfitabilityProjectSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProfabilityRow\\ProfabilityRow.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\departments.js",["345"],"export default (departments = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_DEPARTMENTS':\r\n            return [...action.payload].map(item => {\r\n                item.active = false;\r\n                return item;\r\n            });\r\n        case 'ADD_ACTIVE':\r\n            return [...departments].map(item => {\r\n                if(item.name === action.payload.name){\r\n                    item.active = action.payload.status;                  \r\n                }\r\n                return item;\r\n                });;    \r\n            \r\n         case 'ADD_ACTIVE_FROM_EDIT':\r\n             return [...departments].map(item => {\r\n                    if(action.payload.names.includes(item.name)){\r\n                         item.active = true;\r\n                    }\r\n                    return item;\r\n                });       \r\n        default:\r\n            return departments;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\departments.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\tasks.js",["346"],"const initialState = {\r\n    tasks: [],\r\n    categoryTask: [],\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type){\r\n        case 'SELECT_TYPE_OF_TASK':\r\n            return {\r\n                ...state,\r\n                categoryTask: checkFunction(action.payload, state.categoryTask),\r\n            }\r\n        case 'GET_EMPTY':\r\n            return {\r\n                ...state,\r\n                tasks: [\r\n                    ...state.tasks\r\n                ],\r\n                categoryTask: action.payload\r\n            };\r\n        case 'CREATE_NEW_TASK':\r\n            return {\r\n                tasks: [\r\n                    ...state.tasks,\r\n                    action.payload\r\n                ],\r\n                categoryTask: []\r\n            }   \r\n        case 'FETCH_DATA':\r\n            return {\r\n                tasks: action.payload.tasks,\r\n                categoryTask: [],\r\n            };   \r\n        case 'START_TASK':\r\n            return {\r\n                ...state,\r\n                tasks: [\r\n                    ...state.tasks\r\n                ].map(task => {\r\n                    if(task._id === action.payload.id){\r\n                        task.isActive = true;\r\n                    }\r\n                    return task;\r\n                })\r\n            }\r\n            case 'STOP_TASK':\r\n                return {\r\n                    ...state,\r\n                    tasks: [\r\n                        ...state.tasks\r\n                    ].map(task => {\r\n                        if(task._id === action.payload.id){\r\n                            task.taskTime = task.taskTime + action.payload.time;\r\n                        }\r\n                        return task;\r\n                    })\r\n                } \r\n        default:\r\n            return initialState;\r\n    }\r\n}\r\n\r\nconst checkFunction = (name, array ) => {\r\n    console.log(array);\r\n    let count = 0;\r\n    for(let i = 0; array.length > i; i++ ){\r\n        if(array.includes(name)){\r\n            count++;\r\n        }\r\n    }\r\n    if(count === 2){\r\n        const newArray = array.filter(item => item !== name);\r\n        return newArray;\r\n    } else if( count !== 2) {\r\n        array.push(name);\r\n        return array;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\tasks.js",["347"],"import * as api from '../api';\r\n\r\nexport const selectTypeOfTask = (name) => {\r\n    try {\r\n        return {\r\n            type: 'SELECT_TYPE_OF_TASK',\r\n            payload: name,\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getEmpty = () => {\r\n    try {\r\n        return {\r\n            type: 'GET_EMPTY',\r\n            payload: []\r\n            \r\n        } \r\n    } catch (error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createNewTask = (taskData, history) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createNewTask(taskData);\r\n        history.push('/homepage/user');\r\n        dispatch({ type: 'CREATE_NEW_TASK', payload: data})\r\n        \r\n    } catch (error) {\r\n        dispatch({ type: 'ERROR_CREATE_NEW_TASK', payload: error.response.data})\r\n    }\r\n}\r\n\r\nexport const startTheTask = (id) => {\r\n    try {\r\n        return {\r\n            type: 'START_TASK',\r\n            payload: { id }\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const stopTheTask = (id, time) => {\r\n    try {\r\n        console.log(time)\r\n        return {\r\n            type: 'STOP_TASK',\r\n            payload: {\r\n                id,\r\n                time: Number(time),\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchAllTask = () => async(dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchData();\r\n        const tasks = data.tasks;\r\n        return {\r\n            type: 'FETCH_ALL_TASKS',\r\n            payload: {\r\n                tasks,\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\TasksSection.js",["348","349"],"import { useContext, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { Input } from '../components/Input/Input';\r\nimport UserContext from '../context/UserContext';\r\nimport TaskCard from '../molecules/TaskCard/TaskCard';\r\n\r\nconst TaskInput = styled(Input)`\r\n    margin-bottom: 30px;\r\n`;\r\n\r\n\r\nconst TaskSection  = () => {\r\n\r\n    const tasks = useSelector(state => state.tasks.tasks)\r\n    const { user, getUser } = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        <TaskSection />\r\n    }, [tasks])\r\n\r\n    //wydzielamy zadania dla zalogowanego aktualnie użytkownika - tylko takie chcemy wyświetlać\r\n    const tasksForUser = tasks.filter(item => item.taskUsers.includes(user[0]._id));\r\n\r\n    return(\r\n        <>\r\n            <TaskInput />\r\n            {\r\n                tasksForUser.map( item=> (\r\n                    <TaskCard\r\n                        key={item._id} \r\n                        division={item.categoryTask}\r\n                        title={item.title}\r\n                        time={item.time}\r\n                        id={item._id}\r\n                        taskTime={item.taskTime}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\HiddenMenu.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\context\\theme.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\rates.js",["350"],"export default (state = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_RATES':\r\n            return action.payload;\r\n        case 'EDIT_RATE':\r\n            return [\r\n                ...state, \r\n            ].map(rate => {\r\n                if(rate._id === action.payload.id){\r\n                    rate.rate = action.payload.value;\r\n                }\r\n                return rate\r\n            })\r\n        default:\r\n            return state;\r\n        }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\RatesSection.js",["351"],"import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { fetchAllRates } from '../actions/rates';\r\nimport { LoginButton } from '../components/Button/Button';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport RateRow from '../molecules/RateRow/RateRow';\r\n\r\nconst Wrapper = styled.section`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 70px auto 0 auto;\r\n    width: 315px;\r\n\r\n`;\r\nconst RateSectionSubHeading = styled(SubHeading)`\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nconst RateBtn = styled(LoginButton)`\r\n    margin-top: 40px;\r\n`;\r\n\r\nconst RatesSection = () => {\r\n\r\n    const rates = useSelector(state => state.rates);\r\n    const dispatch = useDispatch();\r\n    console.log(rates);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllRates())\r\n    },[])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <RateSectionSubHeading>Przeciętne stawki <br /> godzinowe pracowników</RateSectionSubHeading>\r\n            {\r\n                rates.map(item => (\r\n                    <RateRow\r\n                        key={item._id}\r\n                        position={item.position}\r\n                        rate={item.rate} \r\n                        id={item._id}\r\n                    />\r\n                ))\r\n            }\r\n            <RateBtn>Dodaj stanowisko</RateBtn>\r\n\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default RatesSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\SliderTheme\\SliderTheme.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\rates.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\RateRow\\RateRow.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\LoadingWrapper\\LoadingWrapper.js",[],{"ruleId":"352","severity":1,"message":"353","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":22},{"ruleId":"352","severity":1,"message":"356","line":6,"column":24,"nodeType":"354","messageId":"355","endLine":6,"endColumn":38},{"ruleId":"352","severity":1,"message":"357","line":7,"column":8,"nodeType":"354","messageId":"355","endLine":7,"endColumn":15},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"352","severity":1,"message":"362","line":2,"column":8,"nodeType":"354","messageId":"355","endLine":2,"endColumn":14},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":12,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":6,"column":1,"nodeType":"365","endLine":44,"endColumn":2},{"ruleId":"366","severity":1,"message":"367","line":17,"column":8,"nodeType":"354","messageId":"355","endLine":17,"endColumn":22},{"ruleId":"366","severity":1,"message":"368","line":98,"column":24,"nodeType":"354","messageId":"355","endLine":98,"endColumn":33},{"ruleId":"369","severity":1,"message":"370","line":110,"column":8,"nodeType":"371","endLine":110,"endColumn":10,"suggestions":"372"},{"ruleId":"369","severity":1,"message":"373","line":121,"column":8,"nodeType":"371","endLine":121,"endColumn":27,"suggestions":"374"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"352","severity":1,"message":"368","line":60,"column":24,"nodeType":"354","messageId":"355","endLine":60,"endColumn":33},{"ruleId":"352","severity":1,"message":"375","line":16,"column":11,"nodeType":"354","messageId":"355","endLine":16,"endColumn":22},{"ruleId":"352","severity":1,"message":"376","line":1,"column":40,"nodeType":"354","messageId":"355","endLine":1,"endColumn":48},{"ruleId":"352","severity":1,"message":"368","line":67,"column":24,"nodeType":"354","messageId":"355","endLine":67,"endColumn":33},{"ruleId":"369","severity":1,"message":"377","line":71,"column":8,"nodeType":"371","endLine":71,"endColumn":10,"suggestions":"378"},{"ruleId":"352","severity":1,"message":"379","line":52,"column":17,"nodeType":"354","messageId":"355","endLine":52,"endColumn":28},{"ruleId":"352","severity":1,"message":"380","line":5,"column":10,"nodeType":"354","messageId":"355","endLine":5,"endColumn":21},{"ruleId":"352","severity":1,"message":"381","line":5,"column":23,"nodeType":"354","messageId":"355","endLine":5,"endColumn":34},{"ruleId":"352","severity":1,"message":"382","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":19},{"ruleId":"352","severity":1,"message":"383","line":7,"column":10,"nodeType":"354","messageId":"355","endLine":7,"endColumn":22},{"ruleId":"366","severity":1,"message":"368","line":69,"column":24,"nodeType":"354","messageId":"355","endLine":69,"endColumn":33},{"ruleId":"366","severity":1,"message":"368","line":82,"column":24,"nodeType":"354","messageId":"355","endLine":82,"endColumn":33},{"ruleId":"369","severity":1,"message":"384","line":87,"column":8,"nodeType":"371","endLine":87,"endColumn":18,"suggestions":"385"},{"ruleId":"369","severity":1,"message":"386","line":91,"column":8,"nodeType":"371","endLine":91,"endColumn":10,"suggestions":"387"},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":16,"endColumn":2},{"ruleId":"352","severity":1,"message":"388","line":70,"column":12,"nodeType":"354","messageId":"355","endLine":70,"endColumn":17},{"ruleId":"369","severity":1,"message":"389","line":89,"column":8,"nodeType":"371","endLine":89,"endColumn":10,"suggestions":"390"},{"ruleId":"369","severity":1,"message":"391","line":117,"column":8,"nodeType":"371","endLine":117,"endColumn":16,"suggestions":"392"},{"ruleId":"369","severity":1,"message":"393","line":126,"column":8,"nodeType":"371","endLine":126,"endColumn":24,"suggestions":"394"},{"ruleId":"369","severity":1,"message":"395","line":75,"column":7,"nodeType":"371","endLine":75,"endColumn":9,"suggestions":"396"},{"ruleId":"366","severity":1,"message":"397","line":89,"column":24,"nodeType":"354","messageId":"355","endLine":89,"endColumn":35},{"ruleId":"369","severity":1,"message":"398","line":104,"column":8,"nodeType":"371","endLine":104,"endColumn":24,"suggestions":"399"},{"ruleId":"369","severity":1,"message":"400","line":113,"column":8,"nodeType":"371","endLine":113,"endColumn":16,"suggestions":"401"},{"ruleId":"369","severity":1,"message":"402","line":120,"column":7,"nodeType":"371","endLine":120,"endColumn":17,"suggestions":"403"},{"ruleId":"352","severity":1,"message":"404","line":5,"column":10,"nodeType":"354","messageId":"355","endLine":5,"endColumn":15},{"ruleId":"352","severity":1,"message":"405","line":6,"column":10,"nodeType":"354","messageId":"355","endLine":6,"endColumn":19},{"ruleId":"352","severity":1,"message":"406","line":25,"column":12,"nodeType":"354","messageId":"355","endLine":25,"endColumn":25},{"ruleId":"352","severity":1,"message":"407","line":32,"column":11,"nodeType":"354","messageId":"355","endLine":32,"endColumn":23},{"ruleId":"352","severity":1,"message":"376","line":1,"column":21,"nodeType":"354","messageId":"355","endLine":1,"endColumn":29},{"ruleId":"352","severity":1,"message":"408","line":3,"column":8,"nodeType":"354","messageId":"355","endLine":3,"endColumn":20},{"ruleId":"369","severity":1,"message":"409","line":76,"column":8,"nodeType":"371","endLine":76,"endColumn":10,"suggestions":"410"},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":26,"endColumn":2},{"ruleId":"363","severity":1,"message":"364","line":6,"column":1,"nodeType":"365","endLine":61,"endColumn":2},{"ruleId":"411","severity":1,"message":"412","line":21,"column":20,"nodeType":"413","messageId":"414","endLine":23,"endColumn":6},{"ruleId":"352","severity":1,"message":"376","line":1,"column":33,"nodeType":"354","messageId":"355","endLine":1,"endColumn":41},{"ruleId":"352","severity":1,"message":"415","line":16,"column":19,"nodeType":"354","messageId":"355","endLine":16,"endColumn":26},{"ruleId":"363","severity":1,"message":"364","line":1,"column":1,"nodeType":"365","endLine":17,"endColumn":2},{"ruleId":"369","severity":1,"message":"373","line":34,"column":7,"nodeType":"371","endLine":34,"endColumn":9,"suggestions":"416"},"no-unused-vars","'persistStore' is defined but never used.","Identifier","unusedVar","'persistReducer' is defined but never used.","'storage' is defined but never used.","no-native-reassign",["417"],"no-negated-in-lhs",["418"],"'styled' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'LoadingWrapper' is defined but never used.","'ThemeType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'getUser'. Either include them or remove the dependency array.","ArrayExpression",["419"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["420"],"'handleClick' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["421"],"'editProject' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useEffect' is defined but never used.","'fetchAllTask' is defined but never used.","React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array. If 'setPercentCompleteOfTheTask' needs the current value of 'time', you can also switch to useReducer instead of useState and read 'time' in the reducer.",["422"],"React Hook useEffect has a missing dependency: 'time'. Either include it or remove the dependency array. If 'setTimeForAllTask' needs the current value of 'time', you can also switch to useReducer instead of useState and read 'time' in the reducer.",["423"],"'users' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchUsers'. Either include them or remove the dependency array.",["424"],"React Hook useEffect has missing dependencies: 'assumptions', 'content', 'customer', 'customerInfo', 'deadline', 'departments', 'dispatch', 'fetchDepartments', 'hours', 'isEdited', 'isEditedDataUpdate', 'name', 'nameActiveDepartments', 'projectData', 'projectUsers', 'projectValue', and 'scopeOfWork'. Either include them or remove the dependency array. You can also do a functional update 'setProjectData(p => ...)' if you only need 'projectData' in the 'setProjectData' call.",["425"],"React Hook useEffect has missing dependencies: 'idUsersAssignToProject', 'isEdited', 'isEditedIdAssign', and 'projectUsers'. Either include them or remove the dependency array. You can also do a functional update 'setIdUsersAssignToProject(i => ...)' if you only need 'idUsersAssignToProject' in the 'setIdUsersAssignToProject' call.",["426"],"React Hook useEffect has missing dependencies: 'assignUsersFromEditProject', 'assignUsersFromEdition', and 'isFromEdition'. Either include them or remove the dependency array.",["427"],"'changeTheme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'idUserAssign'. Either include them or remove the dependency array. You can also do a functional update 'setIdUserAssign(i => ...)' if you only need 'idUserAssign' in the 'setIdUserAssign' call.",["428"],"React Hook useEffect has missing dependencies: 'categoryTask', 'id', 'name', and 'taskData'. Either include them or remove the dependency array. You can also do a functional update 'setTaskData(t => ...)' if you only need 'taskData' in the 'setTaskData' call.",["429"],"React Hook useEffect has missing dependencies: 'halfTimeRaport' and 'taskData'. Either include them or remove the dependency array. You can also do a functional update 'setTaskData(t => ...)' if you only need 'taskData' in the 'setTaskData' call.",["430"],"'Input' is defined but never used.","'Paragraph' is defined but never used.","'timeTaskValue' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'AsideSection' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'name'. Either include them or remove the dependency array.",["431"],"no-unreachable","Unreachable code.","BlockStatement","unreachableCode","'getUser' is assigned a value but never used.",["432"],"no-global-assign","no-unsafe-negation",{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},{"desc":"447","fix":"448"},{"desc":"449","fix":"450"},{"desc":"451","fix":"452"},{"desc":"453","fix":"454"},{"desc":"455","fix":"456"},{"desc":"457","fix":"458"},{"desc":"459","fix":"460"},"Update the dependencies array to be: [dispatch, getUser]",{"range":"461","text":"462"},"Update the dependencies array to be: [dispatch, typeOfMainSection]",{"range":"463","text":"464"},"Update the dependencies array to be: [getUser]",{"range":"465","text":"466"},"Update the dependencies array to be: [taskTime, time]",{"range":"467","text":"468"},"Update the dependencies array to be: [time]",{"range":"469","text":"470"},"Update the dependencies array to be: [dispatch, fetchUsers]",{"range":"471","text":"472"},"Update the dependencies array to be: [assumptions, content, customer, customerInfo, deadline, departments, dispatch, fetchDepartments, hours, isEdited, isEditedDataUpdate, name, nameActiveDepartments, projectData, projectUsers, projectValue, scopeOfWork, status]",{"range":"473","text":"474"},"Update the dependencies array to be: [changeDetektor, idUsersAssignToProject, isEdited, isEditedIdAssign, projectUsers]",{"range":"475","text":"476"},"Update the dependencies array to be: [assignUsersFromEditProject, assignUsersFromEdition, isFromEdition]",{"range":"477","text":"478"},"Update the dependencies array to be: [changeDetektor, dispatch, idUserAssign]",{"range":"479","text":"480"},"Update the dependencies array to be: [categoryTask, id, name, status, taskData]",{"range":"481","text":"482"},"Update the dependencies array to be: [halfTimeRaport, isAccept, taskData]",{"range":"483","text":"484"},"Update the dependencies array to be: [dispatch, name]",{"range":"485","text":"486"},"Update the dependencies array to be: [dispatch]",{"range":"487","text":"488"},[3375,3377],"[dispatch, getUser]",[3889,3908],"[dispatch, typeOfMainSection]",[2083,2085],"[getUser]",[2577,2587],"[taskTime, time]",[2668,2670],"[time]",[3162,3164],"[dispatch, fetchUsers]",[4086,4094],"[assumptions, content, customer, customerInfo, deadline, departments, dispatch, fetchDepartments, hours, isEdited, isEditedDataUpdate, name, nameActiveDepartments, projectData, projectUsers, projectValue, scopeOfWork, status]",[4361,4377],"[changeDetektor, idUsersAssignToProject, isEdited, isEditedIdAssign, projectUsers]",[2009,2011],"[assignUsersFromEditProject, assignUsersFromEdition, isFromEdition]",[3098,3114],"[changeDetektor, dispatch, idUserAssign]",[3297,3305],"[categoryTask, id, name, status, taskData]",[3426,3436],"[halfTimeRaport, isAccept, taskData]",[2004,2006],"[dispatch, name]",[919,921],"[dispatch]"]