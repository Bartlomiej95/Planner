[{"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\index.js":"1","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\App.js":"2","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\GlobalStyle.js":"3","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\mainTheme.js":"4","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\HomePage.js":"5","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Heading\\Heading.js":"6","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Button\\Button.js":"7","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Paragraph\\Paragraph.js":"8","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Input\\Input.js":"9","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\index.js":"10","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogInPage.js":"11","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\RegisterPage.js":"12","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\UserPage.js":"13","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogoutPage.js":"14","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\users.js":"15","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\projects.js":"16","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\auth.js":"17","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\MainSection.tsx":"18","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Header.js":"19","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Footer.js":"20","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\FAQSection.js":"21","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfileSection.js":"22","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\JoinUsSection.js":"23","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Banner.js":"24","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\PlannerFunc.js":"25","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LogoutSection.js":"26","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\auth.js":"27","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LoginSection.tsx":"28","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\RegisterSection.tsx":"29","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\projects.js":"30","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProjectCard\\ProjectCard.js":"31","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\TasksSection.tsx":"32","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\FuncPlannerCard\\FuncPlannerCard.js":"33","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\QAPlannerCard\\QAPlannerCard.js":"34","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Card\\Card.js":"35","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ArchivesCard\\ArchivesCard.tsx":"36","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\users.js":"37","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\SliderTheme\\SliderTheme.tsx":"38","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Form\\RegisterForm.tsx":"39","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Label\\Label.tsx":"40","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\api\\index.js":"41","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\TaskCard\\TaskCard.tsx":"42","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\context\\UserContext.js":"43","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\errors.js":"44","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ErrorMessage\\ErrorMessage.js":"45","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\util\\domain.js":"46","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\CreateProject.js":"47","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\CreateProjectForm.js":"48","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\PersonToProject\\PersonToProject.js":"49","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\InnerUserNavbar\\InnerUserNavbar.tsx":"50","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\TextArea\\TextArea.js":"51","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\TasksToProject.js":"52","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\AsideSection.js":"53","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LabelSection.js":"54","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\DetailsProject.js":"55","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfitabilityProjectSection.js":"56","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProfabilityRow\\ProfabilityRow.js":"57","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\departments.js":"58","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\departments.js":"59","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\tasks.js":"60","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\tasks.js":"61"},{"size":1677,"mtime":1615749114360,"results":"62","hashOfConfig":"63"},{"size":1809,"mtime":1616598410418,"results":"64","hashOfConfig":"63"},{"size":309,"mtime":1610476758906,"results":"65","hashOfConfig":"63"},{"size":1332,"mtime":1614536185359,"results":"66","hashOfConfig":"63"},{"size":709,"mtime":1613322610303,"results":"67","hashOfConfig":"63"},{"size":600,"mtime":1613322610257,"results":"68","hashOfConfig":"63"},{"size":1259,"mtime":1613322610257,"results":"69","hashOfConfig":"63"},{"size":504,"mtime":1613322610261,"results":"70","hashOfConfig":"63"},{"size":514,"mtime":1614536185350,"results":"71","hashOfConfig":"63"},{"size":364,"mtime":1616854914553,"results":"72","hashOfConfig":"63"},{"size":364,"mtime":1613322610303,"results":"73","hashOfConfig":"63"},{"size":380,"mtime":1613322610307,"results":"74","hashOfConfig":"63"},{"size":445,"mtime":1613416094281,"results":"75","hashOfConfig":"63"},{"size":335,"mtime":1613322610307,"results":"76","hashOfConfig":"63"},{"size":323,"mtime":1615749114372,"results":"77","hashOfConfig":"63"},{"size":441,"mtime":1616607321031,"results":"78","hashOfConfig":"63"},{"size":300,"mtime":1613322610298,"results":"79","hashOfConfig":"63"},{"size":6388,"mtime":1616756293554,"results":"80","hashOfConfig":"63"},{"size":1673,"mtime":1615749114367,"results":"81","hashOfConfig":"63"},{"size":433,"mtime":1613322610286,"results":"82","hashOfConfig":"63"},{"size":776,"mtime":1613322610282,"results":"83","hashOfConfig":"63"},{"size":2190,"mtime":1616342162744,"results":"84","hashOfConfig":"63"},{"size":770,"mtime":1615065938273,"results":"85","hashOfConfig":"63"},{"size":1553,"mtime":1613322610282,"results":"86","hashOfConfig":"63"},{"size":685,"mtime":1613322610294,"results":"87","hashOfConfig":"63"},{"size":1224,"mtime":1615749114369,"results":"88","hashOfConfig":"63"},{"size":756,"mtime":1613331756679,"results":"89","hashOfConfig":"63"},{"size":4300,"mtime":1613331756685,"results":"90","hashOfConfig":"63"},{"size":551,"mtime":1613322610294,"results":"91","hashOfConfig":"63"},{"size":1450,"mtime":1616625512498,"results":"92","hashOfConfig":"63"},{"size":2365,"mtime":1616509530935,"results":"93","hashOfConfig":"63"},{"size":503,"mtime":1613322610294,"results":"94","hashOfConfig":"63"},{"size":710,"mtime":1613322610270,"results":"95","hashOfConfig":"63"},{"size":1442,"mtime":1613322610278,"results":"96","hashOfConfig":"63"},{"size":1087,"mtime":1613322610267,"results":"97","hashOfConfig":"63"},{"size":2555,"mtime":1616761390039,"results":"98","hashOfConfig":"63"},{"size":812,"mtime":1615749114357,"results":"99","hashOfConfig":"63"},{"size":2059,"mtime":1613846305635,"results":"100","hashOfConfig":"63"},{"size":2918,"mtime":1613331756684,"results":"101","hashOfConfig":"63"},{"size":2033,"mtime":1616887109097,"results":"102","hashOfConfig":"63"},{"size":1247,"mtime":1616622160585,"results":"103","hashOfConfig":"63"},{"size":2272,"mtime":1613322610282,"results":"104","hashOfConfig":"63"},{"size":760,"mtime":1616342209315,"results":"105","hashOfConfig":"63"},{"size":344,"mtime":1616509530940,"results":"106","hashOfConfig":"63"},{"size":526,"mtime":1613331756681,"results":"107","hashOfConfig":"63"},{"size":159,"mtime":1613671014288,"results":"108","hashOfConfig":"63"},{"size":8730,"mtime":1616509530942,"results":"109","hashOfConfig":"63"},{"size":1804,"mtime":1615749114365,"results":"110","hashOfConfig":"63"},{"size":2330,"mtime":1616509530933,"results":"111","hashOfConfig":"63"},{"size":3899,"mtime":1615065938271,"results":"112","hashOfConfig":"63"},{"size":365,"mtime":1614536185351,"results":"113","hashOfConfig":"63"},{"size":7520,"mtime":1616940541940,"results":"114","hashOfConfig":"63"},{"size":502,"mtime":1616501917871,"results":"115","hashOfConfig":"63"},{"size":3241,"mtime":1616887048197,"results":"116","hashOfConfig":"63"},{"size":3864,"mtime":1616686350977,"results":"117","hashOfConfig":"63"},{"size":1392,"mtime":1616687066141,"results":"118","hashOfConfig":"63"},{"size":3028,"mtime":1614976072868,"results":"119","hashOfConfig":"63"},{"size":492,"mtime":1615749114370,"results":"120","hashOfConfig":"63"},{"size":676,"mtime":1615749114355,"results":"121","hashOfConfig":"63"},{"size":754,"mtime":1616926653164,"results":"122","hashOfConfig":"63"},{"size":520,"mtime":1616918221755,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},"1pfl46n",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"127"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"127"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"127"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"127"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"127"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"166"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"127"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"127"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"127"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"127"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"127"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"127"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\index.js",["262","263","264"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport reducers from './reducers/index';\r\nimport App from './App';\r\n\r\nfunction saveToLocalStorage(state) {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n    \r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nfunction loadFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem('state')\r\n    if(serializedState === null) return undefined\r\n    return JSON.parse(serializedState);\r\n  } catch (error) {\r\n    console.log(error);\r\n    return undefined;\r\n  }\r\n}\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n    }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  // other store enhancers if any\r\n);\r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(reducers, persistedState, enhancer);\r\n\r\n// const store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()))\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n,\r\n  document.getElementById('root')\r\n);\r\n\r\n",["265","266"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\App.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\GlobalStyle.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\theme\\mainTheme.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\HomePage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Heading\\Heading.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Button\\Button.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Paragraph\\Paragraph.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\Input\\Input.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\index.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogInPage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\RegisterPage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\UserPage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\LogoutPage.js",["267"],"import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../organisms/Header';\r\nimport LogoutSection from '../organisms/LogoutSection';\r\n\r\nconst LogoutPage = () => {\r\n    return(\r\n        <>\r\n            <Header />\r\n            <LogoutSection/>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default LogoutPage;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\users.js",["268"],"export default (users = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_USERS':\r\n            return action.payload;\r\n        case 'CREATE_USER':\r\n            return [...users, action.payload];\r\n        \r\n        default:\r\n            return users;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\projects.js",["269"],"export default (projects = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_PROJECTS':\r\n            return action.payload;\r\n        case 'FETCH_PROJECTS_FOR_LOGGEDIN_USER':\r\n            return action.payload;\r\n        case 'CREATE_PROJECT':\r\n            return [...projects, action.payload];\r\n        case 'GET_DETAILS_PROJECT':\r\n            return action.payload;\r\n        default:\r\n            return projects;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\auth.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\MainSection.tsx",["270","271"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport ProjectCard from '../molecules/ProjectCard/ProjectCard';\r\nimport ArchivesCard from '../molecules/ArchivesCard/ArchivesCard';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport TasksSection from './TasksSection';\r\nimport { fetchAllProjects, fetchProjectsForLoggedUser } from '../actions/projects';\r\nimport InnerUserNavbar from '../molecules/InnerUserNavbar/InnerUserNavbar';\r\nimport { LoginButton, IdLoginButton } from '../components/Button/Button';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst Wrapper = styled.main`\r\n    min-height: 100vh;\r\n`;\r\n\r\nconst WrapperProjectCard = styled.div`\r\n    width: 100%;\r\n    margin-top: 42px;\r\n`;\r\n\r\nconst WrapperHelpdeskInfo = styled.div`\r\n    width: 50%;\r\n    height: 200px;\r\n    margin: 0 auto;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst ParagraphHelpdesk = styled(Paragraph)`\r\n    margin-top: 14px;\r\n`;\r\n\r\nconst SpanHelpdesk = styled.span`\r\n    font-weight: 700;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst BtnCreateProject = styled(LoginButton)`\r\n    width: 214px;\r\n    margin-bottom: 45px;\r\n`;\r\n\r\nconst BtnLoadMore = styled(IdLoginButton)`\r\n    display: block;\r\n    margin: 50px auto;\r\n    width: 150px;\r\n`;\r\n\r\n\r\nenum MainSectionType {\r\n    Project = 'project',\r\n    Archives = 'archives',\r\n    ProjectManager = \"projectManager\",\r\n    Tasks = 'tasks'\r\n}\r\n\r\ninterface RootState {\r\n    projects: {\r\n        name: String,\r\n        map: Function,\r\n        slice: Function,\r\n    };   \r\n}\r\n\r\nconst MainSection :React.FC = () => {\r\n\r\n    const { user, getUser } = useContext(UserContext);\r\n    const [typeOfMainSection, setTypeOfMainSection] = useState(MainSectionType.Project);\r\n    const [counterClickLoadMore, setCounterClickLoadMore] = useState(0);\r\n    const projects = useSelector( (state: RootState) => state.projects);\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(fetchProjectsForLoggedUser());\r\n        getUser();\r\n    }, [dispatch]);\r\n\r\n    // dispatchujemy odpowiednią funkcję w zależności na jaką zakładkę kliknie project manager\r\n    // w zakładce project manager - musi zarządzać wszystkimi projektami\r\n    // z kolei w zakładce projekty - musi widzieć tylko projekty do których sam należy\r\n    useEffect(() => {\r\n        if(typeOfMainSection === MainSectionType.ProjectManager ){\r\n            dispatch(fetchAllProjects())\r\n        } if( typeOfMainSection === MainSectionType.Project){\r\n            dispatch(fetchProjectsForLoggedUser())\r\n        }\r\n    }, [typeOfMainSection])\r\n\r\n    if(user === null || projects === null) {\r\n        return(\r\n            <h1>Loading ...</h1>\r\n        )\r\n    }\r\n    const isAdmin = user[0].is_admin;\r\n\r\n    let numberOfProjectOnTheOneLoad = 5;\r\n    let numberOfLoadedProjectsAtTheBeggining = 3;\r\n    let numberOfProjects = numberOfLoadedProjectsAtTheBeggining + numberOfProjectOnTheOneLoad * counterClickLoadMore;\r\n    const projectsDivide = projects.slice(0,numberOfProjects)\r\n\r\n    return(\r\n        <Wrapper>\r\n            {/* InnerUserNavbar - menu przesuwane pod profilem użytkownika */}\r\n            <InnerUserNavbar \r\n                typeFn={ (typeOfMainSection: React.SetStateAction<MainSectionType>) => setTypeOfMainSection(typeOfMainSection)}\r\n                valueOfType={typeOfMainSection} \r\n                isAdmin={isAdmin}\r\n            />\r\n            {\r\n                typeOfMainSection === MainSectionType.Project && ( \r\n                    <WrapperProjectCard>\r\n                    {   projects.map( (project: any) =>   \r\n                            <ProjectCard  titleProject={project.name} description={project.content} departments={project.departments} />\r\n                        )\r\n                    }\r\n                    </WrapperProjectCard>\r\n                ) \r\n            }\r\n            {\r\n                typeOfMainSection === MainSectionType.Archives && (\r\n                    <WrapperProjectCard>\r\n                        <ArchivesCard admin={false} name=\"Nazwa projektu\" description=\"Opis projektu\" id={1} projectUsers={[]} />\r\n                        <ArchivesCard admin={false} name=\"Nazwa projektu\" description=\"Opis projektu\" id={1} projectUsers={[]} />\r\n                        <ArchivesCard admin={false} name=\"Nazwa projektu\" description=\"Opis projektu\" id={1} projectUsers={[]} />\r\n                    </WrapperProjectCard>\r\n                )\r\n            }\r\n            {\r\n                typeOfMainSection === MainSectionType.Tasks && (\r\n                    <WrapperProjectCard>\r\n                       <TasksSection />\r\n                    </WrapperProjectCard>\r\n                )\r\n            }\r\n               {\r\n                isAdmin && ( typeOfMainSection === MainSectionType.ProjectManager) && (\r\n                    <WrapperProjectCard>\r\n                        <BtnCreateProject onClick={() => history.push('/homepage/project/create')}>Dodaj nowy projekt</BtnCreateProject>\r\n                        {\r\n                            projectsDivide.map((item : any) => (\r\n                                <ArchivesCard \r\n                                    admin={isAdmin} \r\n                                    key={item._id} \r\n                                    name={item.name} \r\n                                    description={item.content} \r\n                                    id={item._id} \r\n                                    projectUsers={item.projectUsers} />\r\n                            ))\r\n                        }\r\n                        <BtnLoadMore onClick={() => setCounterClickLoadMore(prev => prev + 1)} > Załaduj więcej </BtnLoadMore>\r\n                    </WrapperProjectCard>\r\n                )\r\n            }\r\n            <WrapperHelpdeskInfo>\r\n                <SubHeading>Masz problem z obsługą planera?</SubHeading>\r\n                <ParagraphHelpdesk> <SpanHelpdesk>Zgłoś się</SpanHelpdesk> do naszego helpdesku</ParagraphHelpdesk>\r\n            </WrapperHelpdeskInfo>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default MainSection;",["272","273"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Header.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Footer.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\FAQSection.js",["274"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Heading } from '../components/Heading/Heading';\r\nimport QAPlannerCard from '../molecules/QAPlannerCard/QAPlannerCard';\r\n\r\nconst Wrapper = styled.section`\r\n    width: 100vw;\r\n    min-height: 800px;\r\n`;\r\n\r\n\r\nconst FAQSection = () => {\r\n\r\n    const [activeCard, setActiveCard] = useState(false)\r\n\r\n    const handleClick = () => {\r\n        setActiveCard(!activeCard)\r\n    }\r\n\r\n    return(\r\n        <Wrapper >\r\n            <Heading>Chcesz poznać nasze narzędzie?</Heading>\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n            <QAPlannerCard />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default FAQSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfileSection.js",["275","276"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport userIcon from '../assets/user.svg';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport { SliderTheme } from '../molecules/SliderTheme/SliderTheme';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst Wrapper = styled.section`\r\n    height: 400px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n`;\r\n\r\nconst ProfileParagraph = styled(Paragraph)`\r\n    width: 60%;\r\n    text-align: center;\r\n    margin-top: 20px;\r\n`;\r\nconst BorderImageUser = styled.div`\r\n    position: relative;\r\n    width: 130px;\r\n    height: 130px;\r\n    border: 2px solid #372FFF;\r\n    border-radius: 50%;\r\n    background-color: transparent;\r\n`;\r\n\r\nconst ImageUser = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 50%;\r\n    background-image: url(${({ icon }) => icon});\r\n    padding: 40px;\r\n`;\r\n\r\nconst NameHeading = styled(SubHeading)`\r\n    font-size: 30px;\r\n    color: #22005F;\r\n`;\r\n\r\nconst PositionParagprah = styled(Paragraph)`\r\n    font-size: 20px;\r\n`;\r\n\r\nconst SpanLogout = styled.span`\r\n    color: #0903B0;\r\n    font-weight: 700;\r\n`;\r\n\r\n\r\nconst ProfileSection = () => {\r\n\r\n    const { user, getUser } = useContext(UserContext)\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    }, [])\r\n\r\n    if(user === null) {\r\n        return(\r\n            <h1>Loading ...</h1>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n            <ProfileParagraph>Pamiętaj, aby po zakończonej pracy <SpanLogout>wylogować się</SpanLogout> z konta</ProfileParagraph>\r\n            <BorderImageUser>\r\n                <ImageUser icon={userIcon} />\r\n            </BorderImageUser>\r\n            <NameHeading>{`${user[0].name} ${user[0].surname}`}</NameHeading>\r\n            <PositionParagprah>{`${user[0].position}`}</PositionParagprah>\r\n            <SliderTheme />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default ProfileSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\JoinUsSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\Banner.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\PlannerFunc.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LogoutSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\auth.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LoginSection.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\RegisterSection.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\projects.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProjectCard\\ProjectCard.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\TasksSection.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\FuncPlannerCard\\FuncPlannerCard.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\QAPlannerCard\\QAPlannerCard.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Card\\Card.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ArchivesCard\\ArchivesCard.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\users.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\SliderTheme\\SliderTheme.tsx",["277"],"import React from 'react';\r\nimport styled, { StyledComponent, css } from 'styled-components';\r\nimport sunIcon from '../../assets/sunIcon.svg';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 36px;\r\n    height: 20px;\r\n    border-radius: 20px;\r\n    background-color: #FEDD2C;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin-bottom: 30px;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst SliderBar = styled.div`\r\n    width: 16px;\r\n    height: 16px;\r\n    background-color: #120D45;\r\n    border-radius: 20px;\r\n\r\n`;\r\n\r\nconst SliderIcon = styled.img`\r\n    display: block;\r\n    color: white;\r\n    width: 12px;\r\n    height: 12px;\r\n\r\n`;\r\n\r\nconst WrapperSliderTask = styled(Wrapper)<{ readonly active: boolean;}>`\r\n    background-color: rgb(112,112,112, 0.4);\r\n    margin-bottom: 0px;\r\n    justify-content: end;\r\n    padding: 0 3px;\r\n\r\n    ${({ active }) => active &&\r\n        css`\r\n            background-color: green;\r\n            \r\n        `}\r\n    \r\n`;\r\n\r\nconst SliderTaskBar = styled(SliderBar)<{ readonly active: boolean}>`\r\n    background-color: #FFFFFF;\r\n\r\n    ${({ active }) => active &&\r\n        css`\r\n            transform: translateX(14px);\r\n            \r\n        `}\r\n    \r\n`;\r\n\r\nexport const SliderTheme: React.FC = () => {\r\n    return(\r\n        <Wrapper>\r\n            <SliderIcon src={sunIcon} alt=\"ikonka\"/>\r\n            <SliderBar/>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\ninterface SliderTaskInterface {\r\n    activeTask: boolean;\r\n    onClick: () => void;\r\n    activeHandle: () => void;\r\n}\r\n\r\nexport const SliderTask: React.FC<SliderTaskInterface> = ({activeTask, activeHandle, ...props }) => {\r\n\r\n    // w zmiennej activeTask przekazujemy wartość boolean, która wskazuje czy dane zadanie jest akutalnie kliknięte przez użytkownika jako to, którym aktualnie użytkownik chce się zająć\r\n    console.log(activeTask);\r\n    return(\r\n        <WrapperSliderTask active={activeTask} onClick={() => activeHandle()}>\r\n            <SliderTaskBar active={activeTask}/>\r\n        </WrapperSliderTask>\r\n    )\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Form\\RegisterForm.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\Label\\Label.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\api\\index.js",["278"],"import axios from 'axios';\r\nimport domain from '../util/domain';\r\n\r\nconst urlRegister = `${domain}/homepage/register`;\r\nconst urlLogin = `${domain}/homepage/login`;\r\nconst urlLogout = `${domain}/homepage/logout`;\r\nconst urlProjects = `${domain}/homepage/user`;\r\nconst urlCreateProjects = `${domain}/homepage/project/create`;\r\nconst urlProjectCreate = `${domain}/homepage/project/create`;\r\nconst urlDetailsProject =`${domain}/homepage/project/:name`;\r\n\r\n\r\nexport const fetchAllUsers = () => axios.get(urlLogin);\r\nexport const createUser = (newUser) => axios.post(urlRegister, newUser);\r\nexport const loginUser = (userData) => axios.post(urlLogin, userData); \r\nexport const logoutUser = () => axios.get(urlLogout); \r\nexport const createProject = (projectData) => axios.post(urlProjectCreate, projectData);\r\nexport const fetchAllProjects = () => axios.get(urlProjects);\r\nexport const fetchProjectsForLoggedUser = () => axios.get(urlProjects);\r\nexport const fetchLoggedInUser = () => axios.get(urlProjects);\r\nexport const fetchAllDepartments = () => axios.get(urlCreateProjects);\r\nexport const addActiveDepartment = () => axios.post(urlCreateProjects);\r\nexport const getDetailsProject = (name) => axios.get(`${domain}/homepage/project/${name}`);\r\n\r\n\r\n","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\TaskCard\\TaskCard.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\context\\UserContext.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\errors.js",["279"],"export default (errors = [], action) => {\r\n    switch(action.type){\r\n        case 'ERROR_LOGIN_USER':\r\n            return action.payload;\r\n        case 'ERROR_REGISTER_USER':\r\n            return action.payload;\r\n        case 'ERROR_CREATE_NEW_PROJECT':\r\n            return action.payload;\r\n        default:\r\n            return errors;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ErrorMessage\\ErrorMessage.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\util\\domain.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\CreateProject.js",["280","281","282","283","284"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport PersonToProject from '../molecules/PersonToProject/PersonToProject';\r\nimport Footer from '../organisms/Footer';\r\nimport Header from '../organisms/Header';\r\nimport TextArea from '../components/TextArea/TextArea';\r\nimport { Heading, SubHeading } from '../components/Heading/Heading';\r\nimport { LoginButton } from '../components/Button/Button';\r\nimport AsideSection from '../organisms/AsideSection';\r\nimport LabelSection from '../organisms/LabelSection';\r\nimport { Input } from '../components/Input/Input';\r\nimport { fetchAllUsers } from '../actions/users';\r\nimport { fetchAllDepartments } from '../actions/departments';\r\nimport { createProject } from '../actions/projects';\r\nimport ErrorMessage from '../molecules/ErrorMessage/ErrorMessage';\r\n\r\nconst CreateProjectFormDiv = styled.div`\r\n    max-width: 275px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-top: 51px;\r\n`;\r\n\r\nconst AssignmentSection = styled.section`\r\n    max-width: 275px;\r\n    margin: 0 auto;\r\n`;\r\n\r\nconst MarksSection = styled.section`\r\n    max-width: 275px;\r\n    margin: 50px auto 0px auto;\r\n`;\r\n\r\nconst CreateBtn = styled(LoginButton)`\r\n    margin-bottom: 40px;\r\n`;\r\n\r\nconst initialProjectData = {\r\n    name: '',\r\n    customer: '',\r\n    deadline: '',\r\n    hours: '',\r\n    projectValue: '',\r\n    content: '',\r\n}\r\n\r\nconst CreateProject = () => {\r\n\r\n    const [projectData, setProjectData] = useState(initialProjectData);\r\n    const [department, setDepartemnt] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [ status, setStatus] = useState(false);\r\n    const [ idUsersAssignToProject, setIdUsersAssignToProject] = useState([]); //id użytkowników przypisanych (klikniętych) do wykonania projektu\r\n    const [ changeDetektor, setChangeDetektor] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const fetchUsers = useSelector(state => state.users);\r\n    const fetchDepartments = useSelector(state => state.departments);\r\n    const errorMessage = useSelector(state => state.errors.message);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchAllUsers());\r\n        dispatch(fetchAllDepartments());\r\n        setUsers(fetchUsers);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n       setDepartemnt(fetchDepartments);\r\n       setProjectData({\r\n        ...projectData,\r\n        departments: [...nameActiveDepartments]\r\n    })\r\n    }, [status])    \r\n\r\n    useEffect(()=>{\r\n        setIdUsersAssignToProject(idUsersAssignToProject);\r\n    }, [changeDetektor])\r\n\r\n    //activeDepartments - nazwy działów które zostały wybrane do realizacji projektu\r\n    let activeDepartments = department.filter(item => item.active);\r\n    let nameActiveDepartments = activeDepartments.map(item => item.name);\r\n      console.log(nameActiveDepartments);\r\n\r\n    const assignUsersToSelectedDepartment = (user) => {\r\n        let amountConditions = nameActiveDepartments.length;\r\n        let i = 0;\r\n        while(i < amountConditions){\r\n            if(user.department === nameActiveDepartments[i]){\r\n                return user\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n\r\n    //userzy z działów, które zostały wybrane\r\n    const usersFromSelectedDepartments = fetchUsers.filter(assignUsersToSelectedDepartment);  \r\n\r\n    const handleChange = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        setProjectData({\r\n            ...projectData,\r\n            [name]:e.target.value\r\n\r\n        });\r\n    }\r\n\r\n    let projectUsers = [];\r\n    //funkcja usuwająca użytkownika z tablicy, gdy admin kliknie drugi raz (czyli odkliknie udział użytkownika w projekcie)\r\n    const handleAssignIdUserToProject = (id, department) => {\r\n        \r\n        // sprawdzamy czy jakiś użytkownik nie został wcześniej do projektu przypisany\r\n        if(typeof idUsersAssignToProject !== \"undefined\" && idUsersAssignToProject.length > 0){\r\n            // jeśli ktoś już jest to sprawdzamy czy czasami przed chwilą kliknięty pracownik, to nie jest ten, który został już wcześniej przypisany do tego projektu\r\n            // mówiąc prościej czy pracownik nie został klinięty drugi raz -> czyli odklinięty\r\n            const foundExistingId = idUsersAssignToProject.includes(id);\r\n            \r\n            if(foundExistingId){\r\n                // jeśli istnieje, to musimy go usunąć z tablicy\r\n                const filteredArray = idUsersAssignToProject.filter(item => item !== id );\r\n        \r\n                setProjectData({\r\n                    ...projectData,\r\n                    projectUsers: filteredArray\r\n                })\r\n                return setIdUsersAssignToProject(filteredArray) //zwracamy tablicę bez usuniętego id              \r\n                \r\n            }\r\n        }\r\n\r\n        // sprawdzamy czy dział ostanio używanego u\r\n        const filteredActiveDepartment = nameActiveDepartments.includes(department);\r\n        if(filteredActiveDepartment){\r\n            setIdUsersAssignToProject([\r\n                ...idUsersAssignToProject,\r\n                id\r\n            ])\r\n            \r\n            setProjectData({\r\n                ...projectData,\r\n                projectUsers: [\r\n                    ...idUsersAssignToProject,\r\n                    id\r\n                ]\r\n            })\r\n        } \r\n        setChangeDetektor(!changeDetektor);\r\n        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            \r\n            dispatch(createProject(projectData, history));\r\n            console.log(projectData);\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    \r\n    }\r\n\r\n    return(\r\n       <>\r\n            <Header />\r\n            <AsideSection />\r\n            <CreateProjectFormDiv>\r\n                <Heading>Nowy projekt</Heading>\r\n                <Form id=\"project-form\" onSubmit={(e) => handleSubmit(e)}>\r\n                    <Input placeholder=\"Nazwa projektu\" type=\"string\" name=\"name\" onChange={ (e) => handleChange(e) } value={projectData.name} />\r\n                    <Input placeholder=\"Klient\" type=\"string\" name=\"customer\" onChange={ (e) => handleChange(e)} value={projectData.customer} />\r\n                    <Input placeholder=\"Termin oddania projektu\" type=\"date\" name=\"deadline\" onChange={ (e) => handleChange(e) } value={projectData.deadline} />\r\n                    <Input placeholder=\"Ilość godzin na projekt\" type=\"number\" name=\"hours\" onChange={ (e) => handleChange(e) } value={projectData.hours} />\r\n                    <Input placeholder=\"Wartość projektu w PLN\" type=\"number\" name=\"projectValue\" onChange={ (e) => handleChange(e) } value={projectData.projectValue} />\r\n                </Form>\r\n            </CreateProjectFormDiv>\r\n            {/* changeStatus - funkcja sprawdzająca czy został kliknięty jakikolwiek Label - efektem jest zmiana statusu boolean na przeciwny, co powoduje przerenderowanie komponentu\r\n            w celu pobrania zaktualizowanych statusów department */}\r\n            <LabelSection title=\"Wybierz dział odpowiedzialny za projekt\" category=\"department\" changeStatus={() => setStatus(!status)} />\r\n            <AssignmentSection>\r\n                <SubHeading>Przypisz osoby <br /> pracujące przy projekcie</SubHeading>\r\n                {\r\n                    usersFromSelectedDepartments.map(user => {\r\n                        return(\r\n                            <PersonToProject\r\n                                key={user._id}\r\n                                id={user._id} \r\n                                position={user.position} \r\n                                name={user.name}\r\n                                surname={user.surname} \r\n                                department={user.department}\r\n                                assignUserToProject={ () => handleAssignIdUserToProject(user._id, user.department)}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </AssignmentSection>\r\n            <MarksSection>\r\n                <SubHeading>Przekaż wytyczne<br /> dotyczące projektu</SubHeading>\r\n                <TextArea placeholder=\"Treść wiadomości\" form=\"project-form\" name=\"content\" onChange={(e) => handleChange(e)} value={projectData.content} />\r\n            </MarksSection>\r\n            { errorMessage && <ErrorMessage error={errorMessage} /> }\r\n            <CreateBtn form=\"project-form\">Utwórz projekt</CreateBtn>\r\n\r\n            <Footer />\r\n       </>\r\n    )\r\n}\r\n\r\nexport default CreateProject;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\CreateProjectForm.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\PersonToProject\\PersonToProject.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\InnerUserNavbar\\InnerUserNavbar.tsx",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\components\\TextArea\\TextArea.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\TasksToProject.js",["285","286","287","288","289","290","291"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\AsideSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\LabelSection.js",["292","293","294","295"],"import { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Label from '../molecules/Label/Label';\r\nimport { SubHeading } from '../components/Heading/Heading';\r\nimport { Input } from '../components/Input/Input';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\n\r\nconst Wrapper = styled.section`\r\n     max-width: 300px;\r\n     margin: 0 auto 45px auto;\r\n     padding-top: 75px;\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst LabelSection = ({ title, category, changeStatus, giveMeTimeTask }) => {\r\n\r\n    const [isActive, setIsActive] = useState(false);\r\n    const [timeTaskValue, setTimeTaskValue] = useState();\r\n\r\n    const handleChangeStatus = () => {\r\n        setIsActive(!isActive);\r\n        changeStatus(isActive);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        console.log(e);\r\n        setTimeTaskValue(e.target.value);\r\n        giveMeTimeTask(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <Wrapper>\r\n                <SubHeading>{title}</SubHeading>\r\n                <LabelWrapper>\r\n\r\n                    { category === \"tasks\" && (\r\n                        <>\r\n                         <Label division=\"UX/UI\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Copywriting\" type=\"task\" getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Branding\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Development\" type=\"task\"  getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Spotkanie organizacyjne\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Testy\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Marketing\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                         <Label division=\"Konsultacje\" type=\"task\" getStatus={() => handleChangeStatus()}/>\r\n                        </>\r\n                    )}\r\n                     { category === \"department\" && (\r\n                        <>\r\n                         <Label division=\"Dział graficzny\" name=\"graphic\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Dział marketingu\" name=\"marketing\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Dział programistyczny\" name=\"programming\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Administracja\" name=\"administration\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Testerzy\" name=\"tester\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                         <Label division=\"Dział handlowy\" name=\"sales\" status={isActive} getStatus={() => handleChangeStatus()} />\r\n                        </>\r\n                    )\r\n                    }\r\n                </LabelWrapper>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default LabelSection;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\views\\DetailsProject.js",["296","297"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { getDetailsProject } from '../actions/projects';\r\nimport { Heading, SubHeading } from '../components/Heading/Heading';\r\nimport { Paragraph } from '../components/Paragraph/Paragraph';\r\nimport AsideSection from '../organisms/AsideSection';\r\nimport Footer from '../organisms/Footer';\r\nimport Header from '../organisms/Header';\r\nimport ProfabilityProjectSection from '../organisms/ProfitabilityProjectSection';\r\nimport timeIcon from '../assets/timeProject.svg';\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 0 36px;\r\n`;\r\n\r\nconst DetailsSubHeading = styled(SubHeading)`\r\n\r\n`;\r\n\r\nconst TimeProjectHeading = styled(SubHeading)`\r\n    margin-bottom: 67px;\r\n    margin-top: 30px;\r\n`;\r\n\r\nconst TimeProjectWrapper = styled.div`\r\n    margin: 0 auto 50px auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    align-items: center;\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n    width: 35px;\r\n    height: 35px;\r\n    box-shadow: 0px 2px 8px 2px rgba(0, 0, 0, 0.16);\r\n    border-radius: 5px;\r\n    background-image: url(${timeIcon});\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    \r\n`;\r\n\r\nconst MiddleSide = styled.div`\r\n    flex-grow: 3;\r\n    margin-left: 30px;\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n\r\n`;\r\n\r\nconst DetailsParagraph = styled(Paragraph)`\r\n    margin: 30px auto;\r\n`;\r\n\r\nconst TitleParagraph = styled(Paragraph)`\r\n    font-weight: 800;\r\n`;\r\n\r\nconst SubtitleParagraph = styled(Paragraph)`\r\n    color: #A5A5A5;\r\n`;\r\n\r\nconst DetailsProject = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const project = useSelector(state => state.projects);\r\n    const { name, id } = props.location.state;\r\n\r\n    useEffect(() => {\r\n        dispatch(getDetailsProject(name));\r\n    }, [])\r\n\r\n    console.log(project);\r\n    return(\r\n        <>\r\n        <Header/>\r\n        <Wrapper>\r\n            <AsideSection />\r\n            <Heading>{project.name}</Heading>\r\n            <DetailsSubHeading>Specyfikacja projektowa</DetailsSubHeading>\r\n            <DetailsParagraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vulputate est eget eros dignissim egestas.\r\n                Nam sed sapien sapien. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vulputate est eget eros dignissim egestas.\r\n                Nam sed sapien sapien. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vulputate est eget eros dignissim egestas. \r\n                Nam sed sapien sapien.\r\n            </DetailsParagraph>\r\n            <DetailsSubHeading>{project.customer}</DetailsSubHeading>\r\n            <DetailsParagraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vulputate est eget eros dignissim egestas. Nam sed sapien sapien.</DetailsParagraph>\r\n            <TimeProjectHeading>Czas pracy nad projektem</TimeProjectHeading>\r\n            <TimeProjectWrapper>\r\n                <LeftSide/>\r\n                <MiddleSide>\r\n                    <TitleParagraph>Realizacja</TitleParagraph>\r\n                    <SubtitleParagraph>W realizacji</SubtitleParagraph>\r\n                </MiddleSide>\r\n                <RightSide>\r\n                    {project.hours}H\r\n                </RightSide>\r\n            </TimeProjectWrapper>\r\n            <DetailsSubHeading>Zakres pracy <br/> w ramach projektu</DetailsSubHeading>\r\n            <DetailsParagraph>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vulputate est eget eros dignissim egestas. Nam sed sapien sapien.</DetailsParagraph>\r\n            <DetailsSubHeading>Rentowność projektu</DetailsSubHeading>\r\n            <ProfabilityProjectSection projectValue={project.projectValue}/>\r\n        </Wrapper>\r\n        <Footer/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailsProject;","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\organisms\\ProfitabilityProjectSection.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\molecules\\ProfabilityRow\\ProfabilityRow.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\departments.js",["298","299"],"export default (departments = [], action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_DEPARTMENTS':\r\n            return action.payload;\r\n        case 'ADD_ACTIVE':\r\n            [...departments].map(item => {\r\n                if(item.name === action.payload.name){\r\n                    item.active = action.payload.status;                  \r\n                }\r\n                return item\r\n            })\r\n\r\n            \r\n        default:\r\n            return departments;\r\n    }\r\n}","C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\departments.js",[],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\reducers\\tasks.js",["300"],"C:\\Users\\WebDev\\Portfolio\\Planner\\frontend\\app\\src\\actions\\tasks.js",["301","302"],{"ruleId":"303","severity":1,"message":"304","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":22},{"ruleId":"303","severity":1,"message":"307","line":6,"column":24,"nodeType":"305","messageId":"306","endLine":6,"endColumn":38},{"ruleId":"303","severity":1,"message":"308","line":7,"column":8,"nodeType":"305","messageId":"306","endLine":7,"endColumn":15},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"303","severity":1,"message":"313","line":2,"column":8,"nodeType":"305","messageId":"306","endLine":2,"endColumn":14},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":12,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":14,"endColumn":2},{"ruleId":"317","severity":1,"message":"318","line":84,"column":8,"nodeType":"319","endLine":84,"endColumn":18,"suggestions":"320"},{"ruleId":"317","severity":1,"message":"321","line":95,"column":8,"nodeType":"319","endLine":95,"endColumn":27,"suggestions":"322"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"303","severity":1,"message":"323","line":16,"column":11,"nodeType":"305","messageId":"306","endLine":16,"endColumn":22},{"ruleId":"303","severity":1,"message":"324","line":1,"column":40,"nodeType":"305","messageId":"306","endLine":1,"endColumn":48},{"ruleId":"317","severity":1,"message":"318","line":66,"column":8,"nodeType":"319","endLine":66,"endColumn":10,"suggestions":"325"},{"ruleId":"326","severity":1,"message":"327","line":2,"column":18,"nodeType":"305","messageId":"306","endLine":2,"endColumn":33},{"ruleId":"303","severity":1,"message":"328","line":10,"column":7,"nodeType":"305","messageId":"306","endLine":10,"endColumn":24},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":10,"endColumn":2},{"ruleId":"303","severity":1,"message":"329","line":55,"column":12,"nodeType":"305","messageId":"306","endLine":55,"endColumn":17},{"ruleId":"317","severity":1,"message":"330","line":69,"column":8,"nodeType":"319","endLine":69,"endColumn":10,"suggestions":"331"},{"ruleId":"317","severity":1,"message":"332","line":77,"column":8,"nodeType":"319","endLine":77,"endColumn":16,"suggestions":"333"},{"ruleId":"317","severity":1,"message":"334","line":81,"column":8,"nodeType":"319","endLine":81,"endColumn":24,"suggestions":"335"},{"ruleId":"303","severity":1,"message":"336","line":112,"column":9,"nodeType":"305","messageId":"306","endLine":112,"endColumn":21},{"ruleId":"303","severity":1,"message":"337","line":87,"column":12,"nodeType":"305","messageId":"306","endLine":87,"endColumn":26},{"ruleId":"303","severity":1,"message":"338","line":87,"column":28,"nodeType":"305","messageId":"306","endLine":87,"endColumn":45},{"ruleId":"303","severity":1,"message":"339","line":88,"column":12,"nodeType":"305","messageId":"306","endLine":88,"endColumn":25},{"ruleId":"303","severity":1,"message":"340","line":88,"column":27,"nodeType":"305","messageId":"306","endLine":88,"endColumn":43},{"ruleId":"303","severity":1,"message":"341","line":96,"column":13,"nodeType":"305","messageId":"306","endLine":96,"endColumn":15},{"ruleId":"317","severity":1,"message":"342","line":101,"column":8,"nodeType":"319","endLine":101,"endColumn":24,"suggestions":"343"},{"ruleId":"317","severity":1,"message":"344","line":108,"column":8,"nodeType":"319","endLine":108,"endColumn":16,"suggestions":"345"},{"ruleId":"303","severity":1,"message":"346","line":5,"column":10,"nodeType":"305","messageId":"306","endLine":5,"endColumn":15},{"ruleId":"303","severity":1,"message":"347","line":6,"column":10,"nodeType":"305","messageId":"306","endLine":6,"endColumn":19},{"ruleId":"303","severity":1,"message":"339","line":25,"column":12,"nodeType":"305","messageId":"306","endLine":25,"endColumn":25},{"ruleId":"303","severity":1,"message":"348","line":32,"column":11,"nodeType":"305","messageId":"306","endLine":32,"endColumn":23},{"ruleId":"303","severity":1,"message":"341","line":70,"column":19,"nodeType":"305","messageId":"306","endLine":70,"endColumn":21},{"ruleId":"317","severity":1,"message":"349","line":74,"column":8,"nodeType":"319","endLine":74,"endColumn":10,"suggestions":"350"},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":17,"endColumn":2},{"ruleId":"351","severity":1,"message":"352","line":14,"column":9,"nodeType":"353","messageId":"354","endLine":15,"endColumn":32},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":13,"endColumn":2},{"ruleId":"303","severity":1,"message":"355","line":1,"column":13,"nodeType":"305","messageId":"306","endLine":1,"endColumn":16},{"ruleId":"356","severity":1,"message":"357","line":23,"column":20,"nodeType":"358","messageId":"359","endLine":25,"endColumn":6},"no-unused-vars","'persistStore' is defined but never used.","Identifier","unusedVar","'persistReducer' is defined but never used.","'storage' is defined but never used.","no-native-reassign",["360"],"no-negated-in-lhs",["361"],"'styled' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["362"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["363"],"'handleClick' is assigned a value but never used.","'useState' is defined but never used.",["364"],"@typescript-eslint/no-unused-vars","'StyledComponent' is defined but never used.","'urlDetailsProject' is assigned a value but never used.","'users' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'fetchUsers'. Either include them or remove the dependency array.",["365"],"React Hook useEffect has missing dependencies: 'fetchDepartments', 'nameActiveDepartments', and 'projectData'. Either include them or remove the dependency array. You can also do a functional update 'setProjectData(p => ...)' if you only need 'projectData' in the 'setProjectData' call.",["366"],"React Hook useEffect has a missing dependency: 'idUsersAssignToProject'. Either include it or remove the dependency array. You can also do a functional update 'setIdUsersAssignToProject(i => ...)' if you only need 'idUsersAssignToProject' in the 'setIdUsersAssignToProject' call.",["367"],"'projectUsers' is assigned a value but never used.","'halfTimeRaport' is assigned a value but never used.","'setHalfTimeRaport' is assigned a value but never used.","'timeTaskValue' is assigned a value but never used.","'setTimeTaskValue' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'idUserAssign'. Either include them or remove the dependency array. You can also do a functional update 'setIdUserAssign(i => ...)' if you only need 'idUserAssign' in the 'setIdUserAssign' call.",["368"],"React Hook useEffect has missing dependencies: 'categoryTask' and 'taskData'. Either include them or remove the dependency array. You can also do a functional update 'setTaskData(t => ...)' if you only need 'taskData' in the 'setTaskData' call.",["369"],"'Input' is defined but never used.","'Paragraph' is defined but never used.","'handleChange' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'name'. Either include them or remove the dependency array.",["370"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'api' is defined but never used.","no-unreachable","Unreachable code.","BlockStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},"Update the dependencies array to be: [dispatch, getUser]",{"range":"389","text":"390"},"Update the dependencies array to be: [dispatch, typeOfMainSection]",{"range":"391","text":"392"},"Update the dependencies array to be: [getUser]",{"range":"393","text":"394"},"Update the dependencies array to be: [dispatch, fetchUsers]",{"range":"395","text":"396"},"Update the dependencies array to be: [fetchDepartments, nameActiveDepartments, projectData, status]",{"range":"397","text":"398"},"Update the dependencies array to be: [changeDetektor, idUsersAssignToProject]",{"range":"399","text":"400"},"Update the dependencies array to be: [changeDetektor, dispatch, idUserAssign]",{"range":"401","text":"402"},"Update the dependencies array to be: [categoryTask, status, taskData]",{"range":"403","text":"404"},"Update the dependencies array to be: [dispatch, name]",{"range":"405","text":"406"},[2342,2352],"[dispatch, getUser]",[2882,2901],"[dispatch, typeOfMainSection]",[1563,1565],"[getUser]",[2391,2393],"[dispatch, fetchUsers]",[2576,2584],"[fetchDepartments, nameActiveDepartments, projectData, status]",[2681,2697],"[changeDetektor, idUsersAssignToProject]",[2937,2953],"[changeDetektor, dispatch, idUserAssign]",[3076,3084],"[categoryTask, status, taskData]",[1864,1866],"[dispatch, name]"]